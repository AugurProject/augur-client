{"version":3,"sources":["webpack:///./src/modules/portfolio/containers/portfolio.js","webpack:///./src/modules/common/components/input.jsx?9a20***","webpack:///./src/modules/common/components/spinner.jsx?978c**","webpack:///./src/modules/common/components/component-nav.jsx?4180*","webpack:///./src/modules/market/constants/share-denominations.js?4d84*","webpack:///./src/utils/set-share-denomination.js?b999*","webpack:///./src/modules/common/components/dropdown.jsx?9dd6**","webpack:///./src/modules/auth/actions/load-account-history.js?61f9","webpack:///./src/modules/common/components/value-date.jsx?7776*","webpack:///./src/modules/filter-sort/container.js?9fc6*","webpack:///./src/modules/market/constants/trade-close-type.js?adc2","webpack:///./src/modules/filter-sort/components/filter-market-state.jsx?69b0*","webpack:///./src/modules/filter-sort/components/filter-search.jsx?925f*","webpack:///./src/modules/filter-sort/components/filter-sort-view.jsx?9b22*","webpack:///./src/modules/filter-sort/components/sort-market-param.jsx?5e3f*","webpack:///./src/modules/filter-sort/helpers/filter-by-market-favorites.js?5ce9*","webpack:///./src/modules/filter-sort/helpers/filter-by-tags.js?e98c*","webpack:///./src/modules/market/components/market-trade-close-dialog.jsx?a4c0","webpack:///./src/modules/market/selectors/scalar-share-denomination.js?ce17*","webpack:///./src/modules/transactions/actions/trigger-transactions-export.js?2fcf","webpack:///./src/modules/transactions/components/transactions-loading-actions.jsx?cc71","webpack:///./src/modules/transactions/selectors/transactions.js?d932","webpack:///./src/modules/account/actions/load-funding-history.js?c52a","webpack:///./src/modules/bids-asks/selectors/order-cancellation.js?9a95","webpack:///./src/modules/create-market/actions/load-create-market-history.js?c679","webpack:///./src/modules/market/components/market-open-orders-group.jsx?4036","webpack:///./src/modules/market/components/market-open-orders-row.jsx?9284","webpack:///./src/modules/my-positions/selectors/close-position-status.js?1a6c","webpack:///./src/modules/my-reports/actions/load-reporting-history.js?1dad","webpack:///./src/modules/my-markets/components/my-market.jsx","webpack:///./src/modules/my-markets/components/my-markets.jsx","webpack:///./src/modules/my-markets/container.js","webpack:///./src/modules/my-orders/components/my-orders.jsx","webpack:///./src/modules/my-orders/container.js","webpack:///./src/modules/my-positions/components/my-position-overview.jsx","webpack:///./src/modules/my-positions/components/my-position.jsx","webpack:///./src/modules/my-positions/components/my-positions-market.jsx","webpack:///./src/modules/my-positions/components/my-positions.jsx","webpack:///./src/modules/my-positions/constants/internal-views.js","webpack:///./src/modules/my-positions/container.js","webpack:///./src/modules/my-reports/components/my-report.jsx","webpack:///./src/modules/my-reports/components/my-reports.jsx","webpack:///./src/modules/my-reports/container.js","webpack:///./src/modules/portfolio/components/portfolio-view.jsx"],"names":["mapStateToProps","activeView","state","Portfolio","connect","Input","props","handleOnChange","e","newValue","target","value","onChange","setState","handleOnBlur","onBlur","handleClear","handleToggleVisibility","isHiddenContentVisible","timeoutVisibleHiddenContent","timeoutID","bind","debounce","nextProps","nextState","canToggleVisibility","debounceMS","isClearable","isIncrementable","incrementAmount","updateValue","shouldMatchValue","comparisonValue","isSearch","min","max","p","s","classNames","className","isMultiline","type","currentTarget","blur","isNaN","parseFloat","isFinite","bnMax","sanitizeBound","bnMin","greaterThan","lessThan","plus","minus","propTypes","PropTypes","string","any","bool","number","func","isRequired","Spinner","ComponentNav","fullWidth","Object","keys","navItems","map","nav","selected","selectedNav","isMobile","updateSelectedNav","label","object","SHARE","MILLI_SHARE","MICRO_SHARE","DENOMINATIONS","setShareDenomination","denomination","formatValue","amount","valueArray","split","dotIndex","indexOf","zeroPadAmount","splice","firstPositiveValue","some","i","parseInt","forEach","handlePostfixedUnit","addCommas","join","step","gtTrillion","newValueArray","length","push","Dropdown","event","default","options","option","array","loadAccountHistory","loadAllHistory","triggerTransactionsExport","dispatch","getState","transactionsOldestLoadedBlock","blockchain","loginAccount","transactionsData","initialTransactionCount","blockChunkSize","transactionSoftLimit","registerBlock","registerBlockNumber","oldestLoadedBlock","currentBlockNumber","clearReports","syncBranch","toBlock","prospectiveFromBlock","fromBlock","constraints","loadTransactions","loadMoreTransactions","updatedTransactionsCount","updatedOptions","updateTransactionsOldestLoadedBlock","updateTransactionsLoading","cb","async","parallel","loadAccountTrades","err","next","loadBidsAsksHistory","loadFundingHistory","loadCreateMarketHistory","loadReportingHistory","console","error","ValueDate","formatted","currentReportingPeriod","getValue","FilterSort","withRouter","POSITION","ORDER","FilterMarketState","marketStateOptions","defaultMarketState","selectedMarketState","filterByMarketState","updateQuery","parseQuery","location","search","items","isEqual","matchedItems","reduce","market","isMarketDataOpen","tradingPeriod","updateFilter","updatedSearch","makeQuery","history","FilterSearch","onChangeSearch","debouncedOnChangeSearch","filterBySearch","searchArray","parseStringToArray","decodeURIComponent","checkStringMatch","toLowerCase","checkArrayMatch","item","parentValue","key","Array","isArray","matchedSearch","searchPlaceholder","FilterSortView","searchItems","marketStateItems","marketTagItems","marketFavoriteItems","marketParamItems","combinedFiltered","updateFilteredItems","_","updateCombinedFilters","filters","filterByTags","filterByMarketFavorites","updateSortedFiltered","sorts","filterType","filter","includes","sortByMarketParam","searchKeys","SortMarketParam","defaultMarketParam","defaultSort","marketSortParams","selectedMarketParam","selectedSort","queryParams","sortedItems","slice","sort","a","b","updateSort","isFavorite","selectedTags","tagsArray","filteredItems","every","tags","tag","filterTag","MarketTradeCloseDialog","isConfirming","status","renderCloseDialogContent","marketID","orderID","closeType","isClosable","quantityOfShares","closePosition","orderType","cancelOrder","outcomeID","CLOSE_DIALOG_SUCCESS","store","scalarMarketsShareDenomination","denominations","markets","updateSelectedShareDenomination","selectShareDenomination","updateScalarMarketShareDenomination","transactionsLoading","transactions","selectTransactions","transactionsDataString","encodeURIComponent","JSON","stringify","document","createElement","setAttribute","click","TransactionsLoadingActions","hasAllTransactionsLoaded","disabled","loadAllTransactions","hidden","allowExport","createSelector","tradeGroups","formattedTransactions","id","tradeGroupID","filteredTransactions","formatTransaction","formatGroupedTransactions","transaction","data","gas","formatEther","ethTokens","etherWithoutGas","formatEtherTokens","shares","sharesChange","formatShares","rep","repChange","formatRep","totalShares","numShares","message","toNumber","outcomeName","description","timestamp","callback","address","query","account","augur","getAccountTransferHistory","transferHistory","convertLogsToTransactions","orderCancellation","MarketOpenOrdersGroup","userOpenOrders","order","name","marketType","lastPricePercent","cancellationStatuses","abortCancelOrderConfirmation","showCancelOrderConfirmation","selectedShareDenomination","MarketOpenOrdersRow","unmatchedShares","isFirst","avgPrice","selectClosePositionStatus","closePositionTradeGroups","statuses","outcomeStatuses","closePositionTransactionIDs","transactionIDs","transactionID","delayClearTradeGroupIDs","numberOfFailedTransactions","numberOfSuccessfulTransactions","setTimeout","clearClosePositionOutcome","branch","sender","eachLimit","constants","PARALLEL_LIMIT","nextLabel","logs","getLogsChunked","aux","Market","endDate","fees","openVolume","volume","numberOfTrades","averageTradeSize","MyMarkets","filteredMarkets","myMarkets","marketIndex","pathname","makePath","getMyMarkets","mapDispatchToProps","MyMarketsContainer","MyOrders","outcomes","outcome","index","orders","getUserOpenOrders","Orders","PositionsMarketOverview","formattedDescription","MyPosition","rounded","qtyShares","purchasePrice","lastPrice","realizedNet","unrealizedNet","totalNet","scalarShareDenomination","position","closePositionStatus","MyPositionsMarket","POSITIONS_POSITIONS","myPositionOutcomes","myPositionsSummary","userOpenOrdersCount","MyPositions","POSITIONS_ORDERS","positions","getLoginAccountPositions","openOrders","getOpenOrders","getPositionsMarkets","getClosePositionStatus","getScalarShareDenomination","getOrderCancellation","memoize","from","Set","MyPositionsContainer","MyReport","outcomePercentage","isSubmitted","reported","isReportEqual","period","repEarned","MyReports","reports","isChallenged","isChallengeable","getMyReports","MyReportsContainer","PortfolioView"],"mappings":"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","file":"portfolio.df066604b70832dccc06.js","sourcesContent":["import { connect } from 'react-redux';\nimport portfolioView from 'modules/portfolio/components/portfolio-view';\n\n// TODO -- no longer need global state passed...can refactor out container for portfolio\n\nconst mapStateToProps = state => ({\n  activeView: state.activeView\n});\n\nconst Portfolio = connect(mapStateToProps)(portfolioView);\n\nexport default Portfolio;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/portfolio/containers/portfolio.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport BigNumber from 'bignumber.js';\n\nimport debounce from 'utils/debounce';\n\nexport default class Input extends Component {\n  // TODO -- Prop Validations\n  static propTypes = {\n    type: PropTypes.string,\n    // className: PropTypes.string,\n    value: PropTypes.any,\n    max: PropTypes.any,\n    min: PropTypes.any,\n    // isMultiline: PropTypes.bool,\n    isClearable: PropTypes.bool,\n    debounceMS: PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n    updateValue: PropTypes.func,\n    onBlur: PropTypes.func,\n    isIncrementable: PropTypes.bool,\n    incrementAmount: PropTypes.number,\n    canToggleVisibility: PropTypes.bool,\n    shouldMatchValue: PropTypes.bool,\n    comparisonValue: PropTypes.string,\n    isSearch: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: this.props.value || '',\n      timeoutID: '',\n      isHiddenContentVisible: false\n    };\n\n    this.handleOnChange = this.handleOnChange.bind(this);\n    this.handleOnBlur = this.handleOnBlur.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n    this.handleToggleVisibility = this.handleToggleVisibility.bind(this);\n    this.timeoutVisibleHiddenContent = debounce(this.timeoutVisibleHiddenContent.bind(this), 1200);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this.setState({ value: nextProps.value });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextProps.canToggleVisibility && !nextState.value && nextState.isHiddenContentVisible) {\n      this.setState({ isHiddenContentVisible: false });\n    }\n\n    if (this.state.isHiddenContentVisible !== nextState.isHiddenContentVisible && nextState.isHiddenContentVisible) {\n      this.timeoutVisibleHiddenContent();\n    }\n  }\n\n  handleOnChange = (e) => {\n    const newValue = e.target.value;\n\n    this.props.onChange(newValue);\n    this.setState({ value: newValue });\n  };\n\n  handleOnBlur = () => {\n    this.props.onChange(this.state.value);\n    this.props.onBlur && this.props.onBlur();\n  };\n\n  handleClear = () => {\n    this.setState({ value: '' });\n    this.props.onChange('');\n  };\n\n  handleToggleVisibility = () => {\n    this.setState({ isHiddenContentVisible: !this.state.isHiddenContentVisible });\n  };\n\n  timeoutVisibleHiddenContent = () => {\n    this.setState({ isHiddenContentVisible: false });\n  };\n\n  render() {\n    const { debounceMS, isClearable, isIncrementable, incrementAmount, updateValue, canToggleVisibility, shouldMatchValue, comparisonValue, isSearch, min, max, ...p } = this.props; // eslint-disable-line no-unused-vars\n    const s = this.state;\n\n    return (\n      <div className={classNames('input', p.className, { 'is-incrementable': isIncrementable, 'can-toggle-visibility': canToggleVisibility })} >\n        {isSearch &&\n          <i className=\"fa fa-search\" />\n        }\n        {!p.isMultiline &&\n          <input\n            {...p}\n            className={classNames('box', p.className, { 'search-input': p.isSearch })}\n            type={p.type === 'password' && s.isHiddenContentVisible ? 'text' : p.type}\n            value={s.value}\n            onChange={this.handleOnChange}\n            onBlur={this.handleOnBlur}\n          />\n        }\n\n        {p.isMultiline &&\n          <textarea\n            {...p}\n            className=\"box\"\n            value={s.value}\n            onChange={this.handleOnChange}\n            onBlur={this.handleOnBlur}\n          />\n        }\n\n        {isClearable && !p.isMultiline && !!s.value &&\n          <button\n            type=\"button\"\n            className=\"button-text-only\"\n            onClick={this.handleClear}\n          >\n            <i className=\"fa fa-close\" />\n          </button>\n        }\n\n        {canToggleVisibility && s.value &&\n          <button\n            type=\"button\"\n            className=\"button-text-only\"\n            onClick={this.handleToggleVisibility}\n            tabIndex=\"-1\"\n          >\n            {s.isHiddenContentVisible ?\n              <i className=\"fa fa-eye-slash\" /> :\n              <i className=\"fa fa-eye\" />\n            }\n          </button>\n        }\n\n        {shouldMatchValue && s.value &&\n          <div className=\"input-value-comparison\">\n            {s.value === comparisonValue ?\n              <i className=\"fa fa-check-circle input-does-match\" /> :\n              <i className=\"fa fa-times-circle input-does-not-match\" />\n            }\n          </div>\n        }\n\n        {isIncrementable &&\n          <div className=\"value-incrementers\">\n            <button\n              type=\"button\"\n              tabIndex=\"-1\"\n              className=\"increment-value unstyled\"\n              onClick={(e) => {\n                e.currentTarget.blur();\n\n                if ((!isNaN(parseFloat(s.value)) && isFinite(s.value)) || !s.value) {\n                  const bnMax = sanitizeBound(max);\n                  const bnMin = sanitizeBound(min);\n\n                  let newValue = new BigNumber(s.value || 0);\n\n                  if (bnMax !== null && newValue.greaterThan(bnMax)) {\n                    newValue = bnMax;\n                  } else if (bnMin !== null && newValue.lessThan(bnMin)) {\n                    newValue = bnMin.plus(new BigNumber(incrementAmount));\n                  } else {\n                    newValue = newValue.plus(new BigNumber(incrementAmount));\n                    if (bnMax !== null && newValue.greaterThan(bnMax)) {\n                      newValue = bnMax;\n                    }\n                  }\n\n                  updateValue(newValue);\n                }\n              }}\n            >\n              <i className=\"fa fa-angle-up\" />\n            </button>\n            <button\n              type=\"button\"\n              tabIndex=\"-1\"\n              className=\"decrement-value unstyled\"\n              onClick={(e) => {\n                e.currentTarget.blur();\n\n                if ((!isNaN(parseFloat(s.value)) && isFinite(s.value)) || !s.value) {\n                  const bnMax = sanitizeBound(max);\n                  const bnMin = sanitizeBound(min);\n\n                  let newValue = new BigNumber(s.value || 0);\n\n                  if (bnMax !== null && newValue.greaterThan(bnMax)) {\n                    newValue = bnMax.minus(new BigNumber(incrementAmount));\n                  } else if (bnMin !== null && newValue.lessThan(bnMin)) {\n                    newValue = bnMin;\n                  } else {\n                    newValue = newValue.minus(new BigNumber(incrementAmount));\n                    if (bnMin !== null && newValue.lessThan(bnMin)) {\n                      newValue = bnMin;\n                    }\n                  }\n\n                  updateValue(newValue);\n                }\n              }}\n            >\n              <i className=\"fa fa-angle-down\" />\n            </button>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nfunction sanitizeBound(value) {\n  if (value == null) {\n    return null;\n  } else if (!(value instanceof BigNumber)) {\n    return new BigNumber(value);\n  }\n\n  return value;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/input.jsx","import React from 'react';\n\nconst Spinner = () => (\n  <article className=\"spinner-container\" >\n    <div className=\"spinner\" />\n  </article>\n);\n\nexport default Spinner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/spinner.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst ComponentNav = p => (\n  <ul\n    className={classNames('component-nav', { 'full-width-nav': p.fullWidth })}\n  >\n    {Object.keys(p.navItems || {}).map(nav => (\n      <button\n        key={nav}\n        className={classNames('unstyled', { selected: p.selectedNav === nav, 'mobile-only': p.navItems[nav].isMobile })}\n        onClick={() => { p.updateSelectedNav(nav); }}\n      >\n        <li className={classNames({ selected: p.selectedNav === nav })} >\n          {p.navItems[nav].label}\n        </li>\n      </button>\n    ))}\n  </ul>\n);\n\nComponentNav.propTypes = {\n  fullWidth: PropTypes.bool,\n  navItems: PropTypes.object.isRequired,\n  selectedNav: PropTypes.string.isRequired,\n  updateSelectedNav: PropTypes.func.isRequired\n};\n\nexport default ComponentNav;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/component-nav.jsx","export const SHARE = 'share';\nexport const MILLI_SHARE = 'milli-share';\nexport const MICRO_SHARE = 'micro-share';\n\nexport const DENOMINATIONS = [\n  {\n    label: 'Shares',\n    value: SHARE\n  },\n  {\n    label: 'mShares',\n    value: MILLI_SHARE\n  },\n  {\n    label: 'μShares',\n    value: MICRO_SHARE\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/constants/share-denominations.js","import { SHARE, MILLI_SHARE, MICRO_SHARE } from 'modules/market/constants/share-denominations';\nimport addCommas from 'utils/add-commas-to-number';\n\n// This helper method is very specific in scope\n// It takes in the formatted shares in string format and returns a string denominated as specified\n// The mutation of the shares is done this way so no actual re-calculation is done to the underlying\n// values, just string manipulation for presentation\nfunction setShareDenomination(value, denomination) {\n  if (value == null) {\n    return value;\n  }\n\n  switch (denomination) {\n    case (MICRO_SHARE):\n      return formatValue(value, 4);\n    case (MILLI_SHARE):\n      return formatValue(value, 1);\n    default:\n    case (SHARE):\n      return value;\n  }\n}\n\n// The value is assumed to *always* be in 'SHARES' denomination\nfunction formatValue(value, amount) {\n  let valueArray = value.split('');\n\n  // remove dot + determine 0 pad amount\n  const dotIndex = valueArray.indexOf('.');\n  let zeroPadAmount = amount;\n  if (dotIndex !== -1) {\n    valueArray.splice(dotIndex, 1);\n  } else {\n    zeroPadAmount += 2;\n  }\n\n  // Strip leading 0's OR returns original value if no values are positive\n  let firstPositiveValue = -1;\n  valueArray.some((value, i) => {\n    if (parseInt(value, 10)) {\n      firstPositiveValue = i;\n      return true;\n    }\n\n    return false;\n  });\n  if (firstPositiveValue !== -1) {\n    valueArray.splice(0, firstPositiveValue);\n  } else {\n    return value; // Returns original value\n  }\n\n  // Strip Commas (added back in at the end)\n  valueArray.forEach((value, i) => {\n    if (value === ',') {\n      valueArray.splice(i, 1);\n    }\n  });\n\n  // Handle postFixed denominations (part of the format-number method)\n  valueArray = handlePostfixedUnit(valueArray, zeroPadAmount);\n\n  return addCommas(valueArray.join('')); // return joined string w/ comma separating thousands\n}\n\nfunction handlePostfixedUnit(valueArray, zeroPadAmount) {\n  const step = zeroPadAmount < 4;\n  const gtTrillion = '> 1T'.split('');\n  let newValueArray = valueArray;\n\n  switch (valueArray[newValueArray.length - 1]) {\n  // Handle existing > 10000 values\n    case ('K'): {\n      newValueArray[newValueArray.length - 1] = step ? 'M' : 'B';\n      return newValueArray;\n    }\n    case ('M'): {\n      if (step) {\n        newValueArray[newValueArray.length - 1] = 'B';\n      } else {\n        newValueArray = gtTrillion;\n      }\n      return newValueArray;\n    }\n    case ('B'):\n    case ('T'): {\n      newValueArray = gtTrillion;\n      return newValueArray;\n    }\n\n  // Handle values that become greater than 10000\n    default: {\n      // Append 0's\n      for (let i = 0; i < zeroPadAmount; i++) {\n        newValueArray.push('0');\n      }\n\n      // Mirrors logic present in format-number\n      if (newValueArray.length >= 13) {\n        newValueArray = gtTrillion;\n      } else if (newValueArray.length >= 11) {\n        newValueArray.splice(newValueArray.length - 9);\n        newValueArray.push('B');\n      } else if (newValueArray.length >= 8) {\n        newValueArray.splice(newValueArray.length - 6);\n        newValueArray.push('M');\n      } else if (newValueArray.length >= 5) {\n        newValueArray.splice(newValueArray.length - 3);\n        newValueArray.push('K');\n      }\n\n      return newValueArray;\n    }\n  }\n}\n\nexport default setShareDenomination;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/set-share-denomination.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Dropdown = p => (\n  <div className=\"dropdown\">\n    <select\n      onChange={(event) => { p.onChange(event.target.value); }}\n      defaultValue={p.default}\n    >\n      {p.options.map(option => (\n        <option\n          key={option.value}\n          value={option.value}\n        >\n          {option.label}\n        </option>\n      ))}\n    </select>\n    <i className=\"fa fa-angle-down\" />\n  </div>\n);\n\nDropdown.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  default: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired\n};\n\nexport default Dropdown;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/dropdown.jsx","import async from 'async';\nimport { clearReports } from 'modules/reports/actions/update-reports';\nimport { loadAccountTrades } from 'modules/my-positions/actions/load-account-trades';\nimport { loadBidsAsksHistory } from 'modules/bids-asks/actions/load-bids-asks-history';\nimport { loadCreateMarketHistory } from 'modules/create-market/actions/load-create-market-history';\nimport { loadFundingHistory } from 'modules/account/actions/load-funding-history';\nimport { loadReportingHistory } from 'modules/my-reports/actions/load-reporting-history';\nimport syncBranch from 'modules/branch/actions/sync-branch';\nimport { updateTransactionsOldestLoadedBlock } from 'modules/transactions/actions/update-transactions-oldest-loaded-block';\nimport { updateTransactionsLoading } from 'modules/transactions/actions/update-transactions-loading';\n\nexport const loadAccountHistory = (loadAllHistory, triggerTransactionsExport) => (dispatch, getState) => {\n  const { transactionsOldestLoadedBlock, blockchain, loginAccount, transactionsData } = getState();\n  const initialTransactionCount = Object.keys(transactionsData || {}).length;\n\n  // Adjust these to constrain the loading boundaries\n  const blockChunkSize = 5760; // ~1 Day based on 15 second blocks\n  const transactionSoftLimit = 40; // Used if blockChunkSize does not load # of transactions up to the soft limit (approximately two UI pages of transactions)\n\n  const registerBlock = loginAccount.registerBlockNumber; // FIXME\n  const oldestLoadedBlock = transactionsOldestLoadedBlock || blockchain.currentBlockNumber;\n\n  if (!transactionsOldestLoadedBlock) { // Denotes nothing has loaded yet\n    dispatch(clearReports());\n    dispatch(syncBranch());\n  }\n\n  if (registerBlock && oldestLoadedBlock && oldestLoadedBlock !== registerBlock) {\n    const options = {};\n    if (!loadAllHistory) {\n      options.toBlock = oldestLoadedBlock === blockchain.currentBlockNumber ? oldestLoadedBlock : oldestLoadedBlock - 1;\n\n      const prospectiveFromBlock = options.toBlock - blockChunkSize;\n      options.fromBlock = prospectiveFromBlock < registerBlock ?\n        registerBlock :\n        prospectiveFromBlock;\n    }\n\n    const constraints = {\n      loadAllHistory,\n      initialTransactionCount,\n      transactionSoftLimit,\n      registerBlock,\n      blockChunkSize,\n      triggerTransactionsExport\n    };\n\n    loadTransactions(dispatch, getState, options, constraints, loadMoreTransactions);\n  }\n};\n\nexport function loadMoreTransactions(dispatch, getState, options, constraints) {\n  if (!constraints.loadAllHistory) {\n    const { transactionsData } = getState();\n\n    const updatedTransactionsCount = Object.keys(transactionsData || {}).length;\n    const updatedOptions = {\n      ...options\n    };\n\n    dispatch(updateTransactionsOldestLoadedBlock(options.fromBlock));\n\n    if (!(updatedTransactionsCount - constraints.initialTransactionCount >= constraints.transactionSoftLimit) && options.fromBlock !== constraints.registerBlock) {\n      updatedOptions.toBlock = updatedOptions.fromBlock - 1;\n\n      const prospectiveFromBlock = updatedOptions.toBlock - constraints.blockChunkSize;\n      updatedOptions.fromBlock = prospectiveFromBlock < constraints.registerBlock ?\n        constraints.registerBlock :\n        prospectiveFromBlock;\n\n      loadTransactions(dispatch, getState, updatedOptions, constraints, loadMoreTransactions);\n    } else {\n      dispatch(updateTransactionsLoading(false));\n      if (constraints.triggerTransactionsExport) {\n        dispatch(constraints.triggerTransactionsExport());\n      }\n    }\n\n    return;\n  }\n\n  dispatch(updateTransactionsOldestLoadedBlock(constraints.registerBlock));\n  dispatch(updateTransactionsLoading(false));\n  constraints.triggerTransactionsExport && dispatch(constraints.triggerTransactionsExport());\n}\n\nfunction loadTransactions(dispatch, getState, options, constraints, cb) {\n  dispatch(updateTransactionsLoading(true));\n\n  async.parallel([\n    next => dispatch(loadAccountTrades(options, (err) => {\n      if (err) next(err);\n      next(null);\n    })),\n    next => dispatch(loadBidsAsksHistory(options, (err) => {\n      if (err) next(err);\n      next(null);\n    })),\n    next => dispatch(loadFundingHistory(options, (err) => {\n      if (err) next(err);\n      next(null);\n    })),\n    next => dispatch(loadCreateMarketHistory(options, (err) => {\n      if (err) next(err);\n      next(null);\n    })),\n    next => dispatch(loadReportingHistory(options, (err) => {\n      if (err) next(err);\n      next(null);\n    }))\n  ], (err) => {\n    if (err) return console.error('ERROR loadTransactions: ', err);\n    cb(dispatch, getState, options, constraints);\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/auth/actions/load-account-history.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst ValueDate = p => (\n  <span className={classNames('value-date', p.className)}>\n    {p.formatted}\n  </span>\n);\n\nValueDate.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.object,\n  formatted: PropTypes.string\n};\n\nexport default ValueDate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/value-date.jsx","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport FilterSortView from 'modules/filter-sort/components/filter-sort-view';\n\nimport getValue from 'utils/get-value';\n\nconst mapStateToProps = state => ({\n  currentReportingPeriod: getValue(state, 'branch.currentReportingWindowAddress')\n});\n\nconst FilterSort = withRouter(connect(mapStateToProps)(FilterSortView));\n\nexport default FilterSort;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/container.js","export const POSITION = 'POSITION';\nexport const ORDER = 'ORDER';\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/constants/trade-close-type.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from 'modules/common/components/dropdown';\n\nimport parseQuery from 'modules/app/helpers/parse-query';\nimport makeQuery from 'modules/app/helpers/make-query';\nimport { isMarketDataOpen } from 'utils/is-market-data-open';\nimport isEqual from 'lodash/isEqual';\n\nimport { FILTER_MARKET_STATE_PARAM } from 'modules/app/constants/param-names';\n\nexport default class FilterMarketState extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    items: PropTypes.array.isRequired,\n    currentReportingPeriod: PropTypes.number.isRequired,\n    updateFilter: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.marketStateOptions = [\n      {\n        label: 'Open',\n        value: 'open'\n      },\n      {\n        label: 'Reporting',\n        value: 'reporting'\n      },\n      {\n        label: 'Closed',\n        value: 'closed'\n      }\n    ];\n\n    this.defaultMarketState = this.marketStateOptions[0].value;\n\n    this.state = {\n      selectedMarketState: this.defaultMarketState\n    };\n\n    this.filterByMarketState = this.filterByMarketState.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  componentWillMount() {\n    const selectedMarketState = parseQuery(this.props.location.search)[FILTER_MARKET_STATE_PARAM];\n    if (selectedMarketState) this.setState({ selectedMarketState });\n    this.filterByMarketState(selectedMarketState || this.state.selectedMarketState, this.props.currentReportingPeriod, this.props.items, this.props.location);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (\n      this.state.selectedMarketState !== nextState.selectedMarketState ||\n      !isEqual(this.props.items, nextProps.items)\n    ) {\n      this.filterByMarketState(nextState.selectedMarketState, nextProps.currentReportingPeriod, nextProps.items, nextProps.location);\n    }\n\n    if (this.state.selectedMarketState !== nextState.selectedMarketState) {\n      this.updateQuery(nextState.selectedMarketState, nextProps.location);\n    }\n  }\n\n  filterByMarketState(selectedMarketState, currentReportingPeriod, items, location) {\n    const matchedItems = items.reduce((p, market, i) => {\n      switch (selectedMarketState) {\n        case 'open':\n          if (isMarketDataOpen(market)) return [...p, i];\n          break;\n        case 'reporting':\n          if (market.tradingPeriod === currentReportingPeriod) return [...p, i];\n          break;\n        case 'closed':\n          if (!isMarketDataOpen(market)) return [...p, i];\n          break;\n        default:\n          return p;\n      }\n\n      return p;\n    }, []);\n\n    this.props.updateFilter(matchedItems);\n  }\n\n  updateQuery(selectedMarketState, location) {\n    let updatedSearch = parseQuery(location.search);\n\n    if (selectedMarketState === this.defaultMarketState) {\n      delete updatedSearch[FILTER_MARKET_STATE_PARAM];\n    } else {\n      updatedSearch[FILTER_MARKET_STATE_PARAM] = selectedMarketState;\n    }\n\n    updatedSearch = makeQuery(updatedSearch);\n\n    this.props.history.push({\n      ...location,\n      search: updatedSearch\n    });\n  }\n\n  render() {\n    return (\n      <article className=\"filter-market-state\">\n        <Dropdown\n          default={this.state.selectedMarketState}\n          options={this.marketStateOptions}\n          onChange={selectedMarketState => this.setState({ selectedMarketState })}\n        />\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/components/filter-market-state.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Input from 'modules/common/components/input';\n\nimport parseQuery from 'modules/app/helpers/parse-query';\nimport makeQuery from 'modules/app/helpers/make-query';\nimport parseStringToArray from 'modules/app/helpers/parse-string-to-array';\nimport debounce from 'utils/debounce';\nimport getValue from 'utils/get-value';\nimport isEqual from 'lodash/isEqual';\n\nimport { FILTER_SEARCH_PARAM } from 'modules/app/constants/param-names';\n\n// NOTE --  Currently the searchKeys can accomodate target's of type string and array\nexport default class FilterSearch extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    items: PropTypes.array.isRequired,  // Raw items to filter against, assumes array of objects\n    keys: PropTypes.array.isRequired,    // Keys w/in each item's object to apply filter\n    updateFilter: PropTypes.func.isRequired,\n    searchPlaceholder: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      search: ''\n    };\n\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.debouncedOnChangeSearch = debounce(this.onChangeSearch.bind(this));\n    this.filterBySearch = this.filterBySearch.bind(this);\n  }\n\n  componentWillMount() {\n    const search = parseQuery(this.props.location.search)[FILTER_SEARCH_PARAM];\n    this.onChangeSearch(search, this.props.items);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!isEqual(this.props.items, nextProps.items)) this.onChangeSearch(this.state.search, nextProps.items);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.search !== nextState.search) this.updateQuery(nextState.search, nextProps.location);\n  }\n\n  onChangeSearch(search, items, debounce) {\n    this.setState({ search });\n\n    if (debounce) return this.debouncedOnChangeSearch(search, items);\n\n    if (search && search.length && items && items.length) {\n      this.filterBySearch(search, items);\n    } else {\n      this.props.updateFilter(null);\n    }\n  }\n\n  filterBySearch(search, items) { // If ANY match is found, the item is included in the returned array\n    const searchArray = parseStringToArray(decodeURIComponent(search));\n\n    const checkStringMatch = (value, search) => value.toLowerCase().indexOf(search) !== -1;\n\n    const checkArrayMatch = (item, keys, search) => { // Accomodates n-1 key's value of either array or object && final key's value of type string or array\n      const parentValue = getValue(item, keys.reduce((p, key, i) => i + 1 !== keys.length ? `${p}${i !== 0 ? '.' : ''}${key}` : p, '')); // eslint-disable-line no-confusing-arrow\n\n      if (parentValue === null) return false;\n\n      if (Array.isArray(parentValue) && parentValue.length) {\n        return parentValue.some(value => (value[keys[keys.length - 1]] || '').toLowerCase().indexOf(search) !== -1);\n      } else if (typeof parentValue === 'object' && Object.keys(parentValue).length) {\n        return (parentValue[keys[keys.length - 1]] || '').toLowerCase().indexOf(search) !== -1;\n      }\n\n      return false; // Just in case\n    };\n\n    const matchedItems = items.reduce((p, item, i) => {\n      const matchedSearch = searchArray.some(search =>\n        this.props.keys.some((key) => {\n          if (typeof key === 'string') return checkStringMatch((item[key] || ''), search);\n\n          return checkArrayMatch(item, key, search);\n        }\n      ));\n\n      if (matchedSearch) {\n        return [...p, i];\n      }\n\n      return p;\n    }, []);\n\n    this.props.updateFilter(matchedItems);\n  }\n\n  updateQuery(search, location) {\n    let updatedSearch = parseQuery(location.search);\n\n    if (search === '') {\n      delete updatedSearch[FILTER_SEARCH_PARAM];\n    } else {\n      updatedSearch[FILTER_SEARCH_PARAM] = search;\n    }\n\n    updatedSearch = makeQuery(updatedSearch);\n\n    this.props.history.push({\n      ...location,\n      search: updatedSearch\n    });\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    return (\n      <article className=\"filter-search\" >\n        <Input\n          isSearch\n          isClearable\n          placeholder={p.searchPlaceholder || 'Search'}\n          value={s.search}\n          onChange={value => this.onChangeSearch(value, p.items, true)}\n        />\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/components/filter-search.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\n\nimport FilterMarketState from 'modules/filter-sort/components/filter-market-state';\nimport SortMarketParam from 'modules/filter-sort/components/sort-market-param';\nimport FilterSearch from 'modules/filter-sort/components/filter-search';\n\nimport filterByMarketFavorites from 'modules/filter-sort/helpers/filter-by-market-favorites';\nimport filterByTags from 'modules/filter-sort/helpers/filter-by-tags';\n\nexport default class FilterSortView extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    items: PropTypes.array.isRequired,\n    updateFilteredItems: PropTypes.func.isRequired,\n    currentReportingPeriod: PropTypes.number,\n    //  Optional Filters + Sorts\n    filterByTags: PropTypes.bool,\n    filterByMarketFavorites: PropTypes.bool,\n    filterByMarketState: PropTypes.bool,\n    sortByMarketParam: PropTypes.bool,\n    searchPlaceholder: PropTypes.string,\n    searchKeys: PropTypes.array,\n    filterBySearch: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // Filters\n      searchItems: null,\n      marketStateItems: null,\n      marketTagItems: null,\n      marketFavoriteItems: null,\n      // Sorts\n      marketParamItems: null,\n      // Aggregated\n      combinedFiltered: null\n    };\n  }\n\n  componentWillMount() {\n    this.props.updateFilteredItems(this.props.items.map((_, i) => i)); // Initialize List\n\n    this.updateCombinedFilters({\n      filters: {\n        searchItems: this.state.searchItems,\n        marketStateItems: this.state.marketStateItems,\n        marketTagItems: this.state.marketTagItems,\n        marketFavoriteItems: this.state.marketFavoriteItems\n      },\n      items: this.props.items\n    });\n\n    if (this.props.filterByTags) this.setState({ marketTagItems: filterByTags(this.props.location, this.props.items) });\n    if (this.props.filterByMarketFavorites) this.setState({ marketFavoriteItems: filterByMarketFavorites(this.props.items) });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.filterByTags &&\n      (\n        !isEqual(this.props.items, nextProps.items) ||\n        !isEqual(this.props.location.search, nextProps.location.search)\n      )\n    ) {\n      this.setState({ marketTagItems: filterByTags(nextProps.location, nextProps.items) });\n    }\n\n    if (\n      nextProps.filterByMarketFavorites &&\n      (\n        !isEqual(this.props.items, nextProps.items) ||\n        !isEqual(this.props.location.search, nextProps.location.search)\n      )\n    ) {\n      this.setState({ marketFavoriteItems: filterByMarketFavorites(nextProps.items) });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (\n      !isEqual(this.state.searchItems, nextState.searchItems) ||\n      !isEqual(this.state.marketStateItems, nextState.marketStateItems) ||\n      !isEqual(this.state.marketTagItems, nextState.marketTagItems) ||\n      !isEqual(this.state.marketFavoriteItems, nextState.marketFavoriteItems) ||\n      !isEqual(this.props.items, nextProps.items)\n    ) {\n      this.updateCombinedFilters({\n        filters: {\n          searchItems: nextState.searchItems,\n          marketStateItems: nextState.marketStateItems,\n          marketTagItems: nextState.marketTagItems,\n          marketFavoriteItems: nextState.marketFavoriteItems\n        },\n        items: nextProps.items\n      });\n    }\n\n    if (\n      !isEqual(this.state.marketParamItems, nextState.marketParamItems) ||\n      !isEqual(this.state.combinedFiltered, nextState.combinedFiltered)\n    ) {\n      this.updateSortedFiltered({\n        sorts: {\n          marketParamItems: nextState.marketParamItems\n        },\n        combinedFiltered: nextState.combinedFiltered\n      });\n    }\n  }\n\n  updateCombinedFilters(options) {\n    const combinedFiltered = Object.keys(options.filters).reduce((p, filterType) => {\n      if (p.length === 0 || (options.filters[filterType] !== null && options.filters[filterType].length === 0)) return [];\n      if (options.filters[filterType] === null) return p;\n\n      return options.filters[filterType].filter(item => p.includes(item));\n    }, options.items.map((_, i) => i));\n\n    this.setState({ combinedFiltered });\n  }\n\n  updateSortedFiltered(options) { // If we want to accomodate more than one sorting mechanism across a filtered list, we'll need to re-architect things a bit\n    this.props.updateFilteredItems(options.sorts.marketParamItems !== null ? options.sorts.marketParamItems : options.combinedFiltered);\n  }\n\n  render() {\n    const p = this.props;\n\n    return (\n      <article className=\"view-header filter-sort\">\n        {((!!p.filterByMarketState && !!p.currentReportingPeriod) || !!p.sortByMarketParam) &&\n          <div className=\"view-header-group\">\n            {!!p.filterByMarketState && !!p.currentReportingPeriod &&\n              <FilterMarketState\n                location={p.location}\n                history={p.history}\n                items={p.items}\n                currentReportingPeriod={p.currentReportingPeriod}\n                updateFilter={marketStateItems => this.setState({ marketStateItems })}\n              />\n            }\n            {!!p.sortByMarketParam &&\n              <SortMarketParam\n                location={p.location}\n                history={p.history}\n                items={p.items}\n                combinedFiltered={this.state.combinedFiltered}\n                updateSort={marketParamItems => this.setState({ marketParamItems })}\n              />\n            }\n          </div>\n        }\n        <div className=\"view-header-group\">\n          {!!p.filterBySearch &&\n            <FilterSearch\n              location={p.location}\n              history={p.history}\n              items={p.items}\n              keys={p.searchKeys}\n              searchPlaceholder={p.searchPlaceholder}\n              updateFilter={searchItems => this.setState({ searchItems })}\n            />\n          }\n        </div>\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/components/filter-sort-view.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Dropdown from 'modules/common/components/dropdown';\n\nimport parseQuery from 'modules/app/helpers/parse-query';\nimport makeQuery from 'modules/app/helpers/make-query';\nimport getValue from 'utils/get-value';\nimport isEqual from 'lodash/isEqual';\n\nimport { SORT_MARKET_PARAM, SORT_MARKET_ORDER_PARAM } from 'modules/app/constants/param-names';\n\nexport default class SortMarketParam extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    items: PropTypes.array.isRequired,\n    combinedFiltered: PropTypes.array.isRequired,\n    updateSort: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.defaultMarketParam = 'volume';\n    this.defaultSort = true; // true = descending, false = ascending\n\n    this.marketSortParams = [\n      {\n        label: 'Volume',\n        value: 'volume'\n      },\n      {\n        label: 'Newest',\n        value: 'creationTime'\n      },\n      {\n        label: 'Expiration',\n        value: 'endDate'\n      },\n      {\n        label: 'Settlement Fee',\n        value: 'settlementFeePercent'\n      }\n    ];\n\n    this.state = {\n      selectedMarketParam: this.defaultMarketParam,\n      selectedSort: this.defaultSort\n    };\n  }\n\n  componentWillMount() {\n    const queryParams = parseQuery(this.props.location.search);\n\n    const selectedMarketParam = queryParams[SORT_MARKET_PARAM];\n    if (selectedMarketParam) this.setState({ selectedMarketParam });\n\n    const selectedSort = queryParams[SORT_MARKET_ORDER_PARAM];\n    if (selectedSort) this.setState({ selectedSort: selectedSort !== 'false' });\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    // call respective methods\n    if (\n      this.state.selectedMarketParam !== nextState.selectedMarketParam ||\n      this.state.selectedSort !== nextState.selectedSort ||\n      !isEqual(this.props.items, nextProps.items) ||\n      !isEqual(this.props.combinedFiltered, nextProps.combinedFiltered)\n    ) {\n      this.sortByMarketParam(nextState.selectedMarketParam, nextState.selectedSort, nextProps.items, nextProps.combinedFiltered, nextProps.location);\n    }\n\n    if (\n      this.state.selectedMarketParam !== nextState.selectedMarketParam ||\n      this.state.selectedSort !== nextState.selectedSort\n    ) {\n      this.updateQuery(nextState.selectedMarketParam, nextState.selectedSort, nextProps.location);\n    }\n  }\n\n  sortByMarketParam(selectedMarketParam, selectedSort, items, combinedFiltered, location) {\n    const sortedItems = combinedFiltered.slice().sort((a, b) => {\n      switch (selectedMarketParam) {\n        case 'creationTime':\n        case 'endDate': {\n          if (selectedSort) {\n            return getValue(items, `${b}.${selectedMarketParam}.timestamp`) - getValue(items, `${a}.${selectedMarketParam}.timestamp`);\n          }\n\n          return getValue(items, `${a}.${selectedMarketParam}.timestamp`) - getValue(items, `${b}.${selectedMarketParam}.timestamp`);\n        }\n        case 'volume':\n        case 'settlementFeePercent':\n        case 'makerFeePercent': {\n          if (selectedSort) {\n            return getValue(items, `${b}.${selectedMarketParam}.value`) - getValue(items, `${a}.${selectedMarketParam}.value`);\n          }\n\n          return getValue(items, `${a}.${selectedMarketParam}.value`) - getValue(items, `${b}.${selectedMarketParam}.value`);\n        }\n        default:\n          return 0; // No sorting\n      }\n    });\n\n    this.props.updateSort(sortedItems);\n  }\n\n  updateQuery(selectedMarketParam, selectedSort, location) {\n    let updatedSearch = parseQuery(location.search);\n\n    if (selectedMarketParam === this.defaultMarketParam) {\n      delete updatedSearch[SORT_MARKET_PARAM];\n    } else {\n      updatedSearch[SORT_MARKET_PARAM] = selectedMarketParam;\n    }\n\n    if (selectedSort === this.defaultSort) {\n      delete updatedSearch[SORT_MARKET_ORDER_PARAM];\n    } else {\n      updatedSearch[SORT_MARKET_ORDER_PARAM] = selectedSort;\n    }\n\n    updatedSearch = makeQuery(updatedSearch);\n\n    this.props.history.push({\n      ...location,\n      search: updatedSearch\n    });\n  }\n\n  render() {\n    const s = this.state;\n\n    return (\n      <article className=\"market-sort-param companion-fields\">\n        <Dropdown\n          className=\"companion-field\"\n          default={s.selectedMarketParam}\n          options={this.marketSortParams}\n          onChange={selectedMarketParam => this.setState({ selectedMarketParam })}\n        />\n        <button\n          className=\"unstyled\"\n          onClick={() => this.setState({ selectedSort: !s.selectedSort })}\n        >\n          {s.selectedSort ? <i className=\"fa fa-sort-amount-desc\" /> : <i className=\"fa fa-sort-amount-asc\" />}\n        </button>\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/components/sort-market-param.jsx","export default function filterByMarketFavorites(items) {\n  if (items == null || !items.length) return null;\n\n  return items.reduce((p, item, i) => {\n    if (item.isFavorite) return [...p, i];\n    return p;\n  }, []);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/helpers/filter-by-market-favorites.js","import parseQuery from 'modules/app/helpers/parse-query';\nimport parseStringToArray from 'modules/app/helpers/parse-string-to-array';\n\nimport { TAGS_PARAM_NAME } from 'modules/app/constants/param-names';\n\nexport default function filterByTags(location, items) {\n  // NOTE -- tag filtering is case sensitive\n\n  const selectedTags = parseQuery(location.search)[TAGS_PARAM_NAME];\n\n  if (selectedTags == null || !selectedTags.length) return null;\n\n  const tagsArray = parseStringToArray(decodeURIComponent(selectedTags), '+');\n\n  const filteredItems = items.reduce((p, item, i) => {\n    if (tagsArray.every(filterTag => item.tags.some(tag => tag.indexOf(filterTag) !== -1))) return [...p, i];\n\n    return p;\n  }, []);\n\n  return filteredItems;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/filter-sort/helpers/filter-by-tags.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Spinner from 'modules/common/components/spinner';\nimport EmDash from 'modules/common/components/em-dash';\n\nimport { POSITION, ORDER } from 'modules/market/constants/trade-close-type';\nimport {\n  CLOSE_DIALOG_CLOSING,\n  CLOSE_DIALOG_NO_ORDERS,\n  CLOSE_DIALOG_FAILED,\n  CLOSE_DIALOG_PARTIALLY_FAILED,\n  CLOSE_DIALOG_SUCCESS\n} from 'modules/market/constants/close-dialog-status';\n\nexport default class MarketTradeCloseDialog extends Component {\n  static propTypes = {\n    status: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isConfirming: false,\n      status: props.status\n    };\n\n    this.renderCloseDialogContent = this.renderCloseDialogContent.bind(this);\n  }\n\n  renderCloseDialogContent(\n    marketID,\n    orderID,\n    closeType,\n    isClosable,\n    quantityOfShares,\n    isConfirming,\n    closePosition,\n    status,\n    orderType,\n    cancelOrder\n  ) {\n    // Position -- No Available Actions\n    if (closeType === POSITION && !status && (!parseFloat(quantityOfShares, 10) || !isClosable)) {\n      return <EmDash />;\n    }\n\n    if (isConfirming) {\n      return (\n        <div className=\"confirming-dialog\">\n          <button\n            className=\"unstyled confirming-no\"\n            onClick={() => {\n              this.setState({ isConfirming: false });\n            }}\n          >\n            No\n          </button>\n          <button\n            className=\"unstyled confirming-yes\"\n            onClick={(event) => {\n              if (closeType === POSITION) {\n                closePosition(marketID, orderID);\n              } else if (closeType === ORDER) {\n                cancelOrder(orderID, marketID, orderType);\n              }\n              this.setState({ isConfirming: false });\n            }}\n          >\n            Yes\n          </button>\n        </div>\n      );\n    }\n\n    switch (status) {\n      case CLOSE_DIALOG_CLOSING:\n        return <Spinner />;\n      case CLOSE_DIALOG_NO_ORDERS:\n        return <span>no orders</span>;\n      case CLOSE_DIALOG_FAILED:\n        return <span>failed</span>;\n      case CLOSE_DIALOG_PARTIALLY_FAILED:\n        return <span>partially failed</span>;\n      case CLOSE_DIALOG_SUCCESS:\n        return <span>success</span>;\n      default:\n        return (\n          <button\n            className=\"unstyled close-order-button\"\n            onClick={() => {\n              this.setState({ isConfirming: true });\n            }}\n          >\n            <span>∅</span>\n          </button>\n        );\n    }\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    const orderID = p.closeType === POSITION ? p.outcomeID : p.orderID;\n\n    return (\n      <article\n        className={\n          classNames(\n            'close-dialog', {\n              'action-disabled': p.closeType === POSITION,\n              'action-running': p.status === CLOSE_DIALOG_CLOSING,\n              'action-failed': p.status === CLOSE_DIALOG_NO_ORDERS ||\n                p.status === CLOSE_DIALOG_FAILED ||\n                p.status === CLOSE_DIALOG_PARTIALLY_FAILED,\n              'action-succeeded': p.status === CLOSE_DIALOG_SUCCESS\n            }\n          )\n        }\n      >\n        {\n          this.renderCloseDialogContent(\n            p.marketID,\n            orderID,\n            p.closeType,\n            p.isClosable,\n            p.quantityOfShares,\n            s.isConfirming,\n            p.closePosition,\n            p.status,\n            p.orderType,\n            p.cancelOrder\n          )\n        }\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/components/market-trade-close-dialog.jsx","import store from 'src/store';\nimport { updateScalarMarketShareDenomination } from 'modules/market/actions/update-scalar-market-share-denomination';\n\nimport { SHARE, MILLI_SHARE, MICRO_SHARE } from 'modules/market/constants/share-denominations';\n\nexport default function () {\n  const { scalarMarketsShareDenomination } = store.getState();\n\n  return {\n    denominations,\n    markets: scalarMarketsShareDenomination,\n    updateSelectedShareDenomination: selectShareDenomination\n  };\n}\n\nconst denominations = [\n  {\n    label: 'Shares',\n    value: SHARE\n  },\n  {\n    label: 'mShares',\n    value: MILLI_SHARE\n  },\n  {\n    label: 'μShares',\n    value: MICRO_SHARE\n  }\n];\n\nfunction selectShareDenomination(marketID, denomination) {\n  store.dispatch(updateScalarMarketShareDenomination(marketID, denomination));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/selectors/scalar-share-denomination.js","import { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { selectTransactions } from 'modules/transactions/selectors/transactions';\n\nexport const triggerTransactionsExport = () => (dispatch, getState) => {\n  const { transactionsLoading } = getState();\n\n  if (!transactionsLoading) {\n    // trigger download\n    const transactions = selectTransactions(getState());\n    const transactionsDataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(transactions));\n    const a = document.createElement('a');\n\n    a.setAttribute('href', transactionsDataString);\n    a.setAttribute('download', 'AugurTransactions.json');\n    a.click();\n  } else {\n    // trigger load all transactions and give it this function as a callback.\n    dispatch(loadAccountHistory(true, triggerTransactionsExport));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/transactions/actions/trigger-transactions-export.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Spinner from 'modules/common/components/spinner';\n\nconst TransactionsLoadingActions = p => (\n  <article className=\"transactions-loading-actions\">\n    {!p.transactionsLoading && !p.hasAllTransactionsLoaded &&\n      <div className=\"transactions-load-buttons\">\n        <button\n          className={classNames('unstyled', { disabled: true })}\n          onClick={() => {\n            if (!p.transactionsLoading) p.loadMoreTransactions();\n          }}\n        >\n          <span>Load More</span>\n        </button>\n        <button\n          className={classNames('unstyled', { disabled: true })}\n          onClick={() => {\n            if (!p.transactionsLoading) p.loadAllTransactions();\n          }}\n        >\n          <span>Load All</span>\n        </button>\n        <button\n          className={classNames('unstyled', { disabled: true }, { hidden: !p.allowExport })}\n          onClick={() => {\n            if (!p.transactionsLoading) {\n              p.triggerTransactionsExport();\n            }\n          }}\n        >\n          <span>Export All</span>\n        </button>\n      </div>\n    }\n    {p.transactionsLoading &&\n      <div className=\"transactions-loading-spinner\" >\n        <span className=\"transactions-loading-message\">Loading More History</span>\n        <Spinner />\n      </div>\n    }\n    {!p.transactionsLoading && p.hasAllTransactionsLoaded && <div className=\"transactions-loaded\">\n      <span\n        className=\"transactions-all-loaded-message\"\n      >\n        All History Loaded\n      </span>\n      <button\n        className={classNames('unstyled', { disabled: p.transactionsLoading }, { hidden: !p.allowExport })}\n        onClick={() => {\n          p.triggerTransactionsExport();\n        }}\n      >\n        <span>Export All</span>\n      </button>\n    </div>\n    }\n  </article>\n);\n\nTransactionsLoadingActions.propTypes = {\n  loadMoreTransactions: PropTypes.func.isRequired,\n  loadAllTransactions: PropTypes.func.isRequired,\n  triggerTransactionsExport: PropTypes.func.isRequired,\n  transactionsLoading: PropTypes.bool,\n  hasAllTransactionsLoaded: PropTypes.bool,\n  allowExport: PropTypes.bool,\n};\n\nexport default TransactionsLoadingActions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/transactions/components/transactions-loading-actions.jsx","import { createSelector } from 'reselect';\nimport BigNumber from 'bignumber.js';\nimport store from 'src/store';\nimport { selectTransactionsDataState } from 'src/select-state';\n\nimport { BUY } from 'modules/transactions/constants/types';\nimport { PENDING, SUCCESS, FAILED, SUBMITTED, INTERRUPTED } from 'modules/transactions/constants/statuses';\n\nimport getValue from 'utils/get-value';\nimport { formatShares, formatEtherTokens, formatEther, formatRep } from 'utils/format-number';\n\nexport default function () {\n  return selectTransactions(store.getState());\n}\n\nexport const selectTransactions = createSelector(\n  selectTransactionsDataState,\n  (transactionsData) => {\n    const tradeGroups = [];\n    const formattedTransactions = Object.keys(transactionsData || {})\n      .reduce((p, id) => {\n        const tradeGroupID = transactionsData[id].tradeGroupID;\n        if (tradeGroupID) {\n          if (tradeGroups.indexOf(tradeGroupID) === -1) {\n            tradeGroups.push(tradeGroupID);\n            const filteredTransactions = Object.keys(transactionsData).filter(id => transactionsData[id].tradeGroupID === tradeGroupID).map(id => transactionsData[id]);\n\n            if (filteredTransactions.length === 1) {\n              p.push(formatTransaction(filteredTransactions[0]));\n            } else {\n              p.push(formatGroupedTransactions(filteredTransactions));\n            }\n          }\n\n          return p;\n        }\n\n        p.push(formatTransaction(transactionsData[id]));\n        return p;\n      }, [])\n      .sort((a, b) => getValue(b, 'timestamp.timestamp') - getValue(a, 'timestamp.timestamp'));\n\n    return formattedTransactions;\n  }\n);\n\nexport function formatTransaction(transaction) {\n  return {\n    ...transaction,\n    data: transaction.data,\n    gas: transaction.gas && formatEther(transaction.gas),\n    ethTokens: transaction.etherWithoutGas && formatEtherTokens(transaction.etherWithoutGas),\n    shares: transaction.sharesChange && formatShares(transaction.sharesChange),\n    rep: transaction.repChange && formatRep(transaction.repChange)\n  };\n}\n\nexport function formatGroupedTransactions(transactions) {\n  const formattedTransactions = transactions.map(transaction => formatTransaction(transaction)).sort((a, b) => getValue(b, 'timestamp.timestamp') - getValue(a, 'timestamp.timestamp'));\n\n  const status = formattedTransactions.reduce((p, transaction) => {\n    if (p === FAILED || transaction.status === FAILED) return FAILED;\n    if (p === INTERRUPTED || transaction.status === INTERRUPTED) return INTERRUPTED;\n    if (p === PENDING || transaction.status === PENDING) return PENDING;\n    if (p === SUBMITTED || transaction.status === SUBMITTED) return SUBMITTED;\n    if (transaction.status === SUCCESS) return SUCCESS;\n\n    return p;\n  }, null);\n\n  const totalShares = formattedTransactions.reduce((p, transaction) => p.plus(new BigNumber(transaction.numShares.value)), new BigNumber(0));\n\n  return {\n    status,\n    message: `${formattedTransactions[0].type === BUY ? 'Buy' : 'Sell'} ${totalShares.toNumber()} shares of ${formattedTransactions[0].data.outcomeName}`,\n    description: formattedTransactions[0].description,\n    timestamp: formattedTransactions[formattedTransactions.length - 1].timestamp,\n    transactions: formattedTransactions\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/transactions/selectors/transactions.js","import { augur } from 'services/augurjs';\nimport { convertLogsToTransactions } from 'modules/transactions/actions/convert-logs-to-transactions';\nimport { TRANSFER } from 'modules/transactions/constants/types';\nimport logError from 'utils/log-error';\n\nexport function loadFundingHistory(options, callback = logError) {\n  return (dispatch, getState) => {\n    const { loginAccount } = getState();\n    if (!loginAccount.address) return callback(null);\n    const query = { ...options, account: loginAccount.address };\n    augur.account.getAccountTransferHistory(query, (err, transferHistory) => {\n      if (err) return callback(err);\n      if (transferHistory == null) return callback(`no transfer history data received`);\n      if (Array.isArray(transferHistory) && transferHistory.length) {\n        dispatch(convertLogsToTransactions(TRANSFER, transferHistory));\n      }\n      callback(null, transferHistory);\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/account/actions/load-funding-history.js","import store from 'src/store';\nimport { cancelOrder } from 'modules/bids-asks/actions/cancel-order';\n\nexport default () => {\n  const { orderCancellation } = store.getState();\n\n  return {\n    ...orderCancellation,\n    cancelOrder: (orderID, marketID, type) => {\n      store.dispatch(cancelOrder(orderID, marketID, type));\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/bids-asks/selectors/order-cancellation.js","// import loadDataFromAugurNode from 'modules/app/actions/load-data-from-augur-node';\n// import { convertLogsToTransactions } from 'modules/transactions/actions/convert-logs-to-transactions';\n// import { CREATE_MARKET } from 'modules/transactions/constants/types';\nimport logError from 'utils/log-error';\n\nexport function loadCreateMarketHistory(options, callback = logError) {\n  return (dispatch, getState) => {\n    // const { branch, loginAccount } = getState();\n    // if (!loginAccount.address) return callback(null);\n    // const query = { ...options, account: loginAccount.address, branch: branch.id };\n    // TODO replace with augur.markets.getMarketsCreatedByUser?\n    // loadDataFromAugurNode(env.augurNodeUrl, 'getCreateMarketHistory', query, (err, createMarketHistory) => {\n    //   if (err) return callback(err);\n    //   if (createMarketHistory == null) {\n    //     return callback(`no create market history data received`);\n    //   }\n    //   if (Array.isArray(createMarketHistory) && createMarketHistory.length) {\n    //     dispatch(convertLogsToTransactions(CREATE_MARKET, createMarketHistory));\n    //   }\n    //   callback(null, createMarketHistory);\n    // });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/create-market/actions/load-create-market-history.js","import React from 'react';\n\nimport MarketOpenOrdersRow from 'modules/market/components/market-open-orders-row';\n\nconst MarketOpenOrdersGroup = p => (\n  <article className=\"market-open-orders-group\">\n    {(p.userOpenOrders || []).map((order, i) => (\n      <MarketOpenOrdersRow\n        key={order.id}\n        isFirst={i === 0}\n        {...order}\n        name={p.name}\n        marketType={p.marketType}\n        lastPricePercent={p.lastPricePercent}\n        status={p.orderCancellation[order.id]}\n        cancellationStatuses={p.orderCancellation.cancellationStatuses}\n        cancelOrder={p.orderCancellation.cancelOrder}\n        abortCancelOrderConfirmation={p.orderCancellation.abortCancelOrderConfirmation}\n        showCancelOrderConfirmation={p.orderCancellation.showCancelOrderConfirmation}\n        selectedShareDenomination={p.selectedShareDenomination}\n      />\n    ))}\n  </article>\n);\n\nexport default MarketOpenOrdersGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/components/market-open-orders-group.jsx","import React from 'react';\n\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport MarketTradeCloseDialog from 'modules/market/components/market-trade-close-dialog';\n\nimport { SCALAR } from 'modules/markets/constants/market-types';\nimport { ORDER } from 'modules/market/constants/trade-close-type';\n\nimport getValue from 'utils/get-value';\nimport setShareDenomination from 'utils/set-share-denomination';\n\nconst MarketOpenOrdersRow = (p) => {\n  const unmatchedShares = setShareDenomination(getValue(p, 'unmatchedShares.formatted'), p.selectedShareDenomination);\n\n  return (\n    <article className={`market-open-orders-row not-selectable ${p.isFirst ? 'isFirst' : ''}`} >\n      {p.isFirst ?\n        <span>\n          {p.marketType === SCALAR ?\n            <ValueDenomination formatted={p.lastPricePercent} /> :\n            <span>{p.name}</span>\n          }\n        </span> :\n        <span />\n      }\n      <span>{p.type}</span>\n      <ValueDenomination formatted={unmatchedShares} />\n      <ValueDenomination {...p.avgPrice} />\n      <MarketTradeCloseDialog\n        closeType={ORDER}\n        marketID={p.marketID}\n        orderID={p.id}\n        status={p.status}\n        orderType={p.type}\n        cancelOrder={p.cancelOrder}\n      />\n    </article>\n  );\n};\n\nexport default MarketOpenOrdersRow;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/components/market-open-orders-row.jsx","import { createSelector } from 'reselect';\nimport store from 'src/store';\nimport { selectClosePositionTradeGroupsState, selectTransactionsDataState } from 'src/select-state';\nimport { clearClosePositionOutcome } from 'modules/my-positions/actions/clear-close-position-outcome';\n\nimport { CLOSE_DIALOG_CLOSING, CLOSE_DIALOG_NO_ORDERS, CLOSE_DIALOG_FAILED, CLOSE_DIALOG_PARTIALLY_FAILED, CLOSE_DIALOG_SUCCESS } from 'modules/market/constants/close-dialog-status';\nimport { SUCCESS, FAILED } from 'modules/transactions/constants/statuses';\n\nexport default function () {\n  return selectClosePositionStatus(store.getState());\n}\n\nexport const selectClosePositionStatus = createSelector(\n  selectClosePositionTradeGroupsState,\n  selectTransactionsDataState,\n  (closePositionTradeGroups, transactionsData) => {\n    const statuses = Object.keys(closePositionTradeGroups).reduce((p, marketID) => {\n      const outcomeStatuses = Object.keys(closePositionTradeGroups[marketID]).reduce((p, outcomeID) => {\n        const closePositionTransactionIDs = closePositionTradeGroups[marketID][outcomeID].reduce((p, tradeGroupID) => {\n          const transactionIDs = Object.keys(transactionsData).filter(transactionID => transactionsData[transactionID].tradeGroupID === tradeGroupID);\n\n          if (transactionIDs.length !== 0) {\n            return [...p, ...transactionIDs];\n          }\n\n          return p;\n        }, []);\n\n        // closing failed further up in the call chain to close position\n        if (closePositionTradeGroups[marketID][outcomeID][0] === CLOSE_DIALOG_FAILED) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_FAILED };\n        }\n\n        // no orders are available within the outcome's order book\n        if (closePositionTradeGroups[marketID][outcomeID][0] === CLOSE_DIALOG_NO_ORDERS) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_NO_ORDERS };\n        }\n\n        // Short Circuit until transactionsData is updated with the tradeGroupID\n        if (closePositionTransactionIDs.length === 0 && closePositionTradeGroups[marketID][outcomeID]) {\n          return { ...p, [outcomeID]: CLOSE_DIALOG_CLOSING };\n        }\n\n        const numberOfFailedTransactions = closePositionTransactionIDs.filter(transactionID => transactionsData[transactionID].status === FAILED).length;\n\n        // Close Position Completely Failed\n        if (numberOfFailedTransactions === closePositionTransactionIDs.length) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_FAILED };\n        }\n\n        // Close Position Completely Succeeded\n        const numberOfSuccessfulTransactions = closePositionTransactionIDs.filter(transactionID => transactionsData[transactionID].status === SUCCESS).length;\n\n        if (numberOfSuccessfulTransactions === closePositionTransactionIDs.length) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_SUCCESS };\n        }\n\n        // Close Position Partially Failed\n        if (numberOfFailedTransactions && numberOfFailedTransactions !== closePositionTransactionIDs.length && numberOfSuccessfulTransactions === 0) {\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_PARTIALLY_FAILED };\n        } else if (numberOfFailedTransactions && numberOfFailedTransactions + numberOfSuccessfulTransactions === closePositionTransactionIDs.length) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_PARTIALLY_FAILED };\n        }\n\n        // Close Position In-Process without Failures\n        return { ...p, [outcomeID]: CLOSE_DIALOG_CLOSING };\n      }, {});\n\n      if (Object.keys(outcomeStatuses).length !== 0) {\n        return { ...p, [marketID]: outcomeStatuses };\n      }\n\n      return p;\n    }, {});\n\n    return statuses;\n  }\n);\n\n// waits, then clears orderIds from closePositionTradeGroups\n// This will ultimately clear the outcome status and allow for the\n// user to try again if an action is available\nfunction delayClearTradeGroupIDs(marketID, outcomeID) {\n  setTimeout(() => store.dispatch(clearClosePositionOutcome(marketID, outcomeID)), 3000);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/selectors/close-position-status.js","import async from 'async';\nimport { augur, constants } from 'services/augurjs';\nimport { convertLogsToTransactions } from 'modules/transactions/actions/convert-logs-to-transactions';\nimport { SUBMIT_REPORT } from 'modules/transactions/constants/types';\nimport logError from 'utils/log-error';\n\nexport function loadReportingHistory(options, callback = logError) {\n  return (dispatch, getState) => {\n    const { branch, loginAccount } = getState();\n    const filter = {\n      ...options,\n      sender: loginAccount.address,\n      branch: branch.id\n    };\n    async.eachLimit([\n      SUBMIT_REPORT // TODO insert other reporting events here\n    ], constants.PARALLEL_LIMIT, (label, nextLabel) => {\n      augur.logs.getLogsChunked({ label, filter, aux: null }, (logs) => {\n        if (Array.isArray(logs) && logs.length) dispatch(convertLogsToTransactions(label, logs));\n      }, nextLabel);\n    }, callback);\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/actions/load-reporting-history.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport ValueDate from 'modules/common/components/value-date';\n\nconst Market = p => (\n  <article\n    className=\"my-market portfolio-detail\"\n  >\n    <div\n      className=\"portfolio-group portfolio-main-group\"\n    >\n      <span\n        className=\"main-group-title\"\n      >\n        <span>ends: </span>\n        <ValueDate {...p.endDate} />\n      </span>\n    </div>\n    <div className=\"portfolio-group\">\n      <div className=\"portfolio-pair total-value\">\n        <span className=\"title\">fees collected</span>\n        <ValueDenomination\n          className=\"colorize\"\n          {...p.fees}\n        />\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">open volume</span>\n        <ValueDenomination {...p.openVolume} />\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">volume</span>\n        <ValueDenomination {...p.volume} />\n      </div>\n      <div className=\"portfolio-pair total-cost\">\n        <span className=\"title\"># of trades</span>\n        <ValueDenomination {...p.numberOfTrades} />\n      </div>\n      <div className=\"portfolio-pair total-value\">\n        <span className=\"title\">avg trade size</span>\n        <ValueDenomination {...p.averageTradeSize} />\n      </div>\n    </div>\n  </article>\n);\n\nMarket.propTypes = {\n  endDate: PropTypes.object.isRequired,\n  fees: PropTypes.object.isRequired,\n  openVolume: PropTypes.object.isRequired,\n  volume: PropTypes.object.isRequired,\n  numberOfTrades: PropTypes.object.isRequired,\n  averageTradeSize: PropTypes.object.isRequired\n};\n\nexport default Market;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-markets/components/my-market.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\n\nimport NullStateMessage from 'modules/common/components/null-state-message';\nimport MyMarket from 'modules/my-markets/components/my-market';\nimport TransactionsLoadingActions from 'modules/transactions/components/transactions-loading-actions';\nimport FilterSort from 'modules/filter-sort/container';\n\nimport makePath from 'modules/app/helpers/make-path';\nimport makeQuery from 'modules/app/helpers/make-query';\nimport getValue from 'utils/get-value';\n\nimport { MARKET } from 'modules/app/constants/views';\nimport { MARKET_DESCRIPTION_PARAM_NAME, MARKET_ID_PARAM_NAME } from 'modules/app/constants/param-names';\n\nexport default class MyMarkets extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    myMarkets: PropTypes.array.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.searchKeys = [\n      'description',\n      ['outcomes', 'name'],\n      ['tags', 'name']\n    ];\n\n    this.state = {\n      filteredMarkets: []\n    };\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    return (\n      <article className=\"my-markets\">\n        <Helmet>\n          <title>My Markets</title>\n        </Helmet>\n        <div className=\"view-header\">\n          <div className=\"view-header-group\" />\n          <div className=\"view-header-group\">\n            <TransactionsLoadingActions\n              loadMoreTransactions={p.loadMoreTransactions}\n              loadAllTransactions={p.loadAllTransactions}\n              transactionsLoading={p.transactionsLoading}\n              hasAllTransactionsLoaded={p.hasAllTransactionsLoaded}\n              triggerTransactionsExport={p.triggerTransactionsExport}\n            />\n          </div>\n        </div>\n        <FilterSort\n          locaiton={p.location}\n          history={p.history}\n          items={p.myMarkets}\n          updateFilteredItems={filteredMarkets => this.setState({ filteredMarkets })}\n          searchPlaceholder=\"Search Created Markets\"\n          searchKeys={this.searchKeys}\n          filterBySearch\n          filterByMarketState\n          sortByMarketParam\n        />\n        {s.filteredMarkets && s.filteredMarkets.length ?\n          <div>\n            {s.filteredMarkets.map(marketIndex => (\n              <div\n                key={p.myMarkets[marketIndex].id}\n                className=\"portfolio-market\"\n              >\n                <div\n                  className=\"my-market-overview portfolio-market-overview\"\n                >\n                  <Link\n                    to={{\n                      pathname: makePath(MARKET),\n                      search: makeQuery({\n                        [MARKET_DESCRIPTION_PARAM_NAME]: getValue(p, `myMarkets[${marketIndex}].formattedDescription`),\n                        [MARKET_ID_PARAM_NAME]: getValue(p, `myMarkets[${marketIndex}].id`)\n                      })\n                    }}\n                  >\n                    <span>\n                      {getValue(p, `myMarkets[${marketIndex}].description`)}\n                    </span>\n                  </Link>\n                </div>\n                <MyMarket\n                  {...p.myMarkets[marketIndex]}\n                />\n              </div>\n            ))}\n          </div> :\n          <NullStateMessage message=\"No Markets Created\" />\n        }\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-markets/components/my-markets.jsx","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyMarkets from 'modules/my-markets/components/my-markets';\nimport getMyMarkets from 'modules/my-markets/selectors/my-markets';\nimport { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { triggerTransactionsExport } from 'modules/transactions/actions/trigger-transactions-export';\n\nconst mapStateToProps = state => ({\n  myMarkets: getMyMarkets(),\n  transactionsLoading: state.transactionsLoading,\n  hasAllTransactionsLoaded: state.transactionsOldestLoadedBlock === state.loginAccount.registerBlockNumber // FIXME\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMoreTransactions: () => dispatch(loadAccountHistory()),\n  loadAllTransactions: () => dispatch(loadAccountHistory(true)),\n  triggerTransactionsExport: () => dispatch(triggerTransactionsExport()),\n});\n\nconst MyMarketsContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(MyMarkets));\n\nexport default MyMarketsContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-markets/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarketOpenOrdersGroup from 'modules/market/components/market-open-orders-group';\n\nimport { SCALAR } from 'modules/markets/constants/market-types';\n\nimport getValue from 'utils/get-value';\n\nconst MyOrders = p => (\n  <article className=\"my-orders market-open-orders\">\n    <div className=\"market-open-orders-header\">\n      <span>{!p.marketType === SCALAR ? 'Outcomes' : 'Outcome'}</span>\n      <span>Type</span>\n      <span>Shares</span>\n      <span>Price</span>\n      <span>Action</span>\n    </div>\n    {(p.outcomes || []).map((outcome, index) => {\n      const lastPricePercent = getValue(outcome, 'lastPricePercent.rounded');\n\n      return (\n        <MarketOpenOrdersGroup\n          key={outcome.name}\n          id={outcome.id}\n          name={outcome.name}\n          marketType={p.marketType}\n          lastPricePercent={lastPricePercent}\n          userOpenOrders={outcome.userOpenOrders}\n          orderCancellation={p.orderCancellation}\n          selectedShareDenomination={p.selectedShareDenomination}\n        />\n      );\n    })}\n  </article>\n);\n\nMyOrders.propTypes = {\n  outcomes: PropTypes.array.isRequired,\n  marketType: PropTypes.string.isRequired,\n  orderCancellation: PropTypes.object.isRequired\n};\n\nexport default MyOrders;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-orders/components/my-orders.jsx","import { connect } from 'react-redux';\n\nimport MyOrders from 'modules/my-orders/components/my-orders';\n\nimport getUserOpenOrders from 'modules/user-open-orders/selectors/open-orders';\n\nconst mapStateToProps = state => ({\n  orders: getUserOpenOrders()\n});\n\nconst Orders = connect(mapStateToProps)(MyOrders);\n\nexport default Orders;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-orders/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport makePath from 'modules/app/helpers/make-path';\nimport makeQuery from 'modules/app/helpers/make-query';\n\nimport { MARKET } from 'modules/app/constants/views';\nimport { MARKET_DESCRIPTION_PARAM_NAME, MARKET_ID_PARAM_NAME } from 'modules/app/constants/param-names';\n\nconst PositionsMarketOverview = p => (\n  <article className=\"my-positions-overview portfolio-market-overview\">\n    <Link\n      to={{\n        pathname: makePath(MARKET),\n        search: makeQuery({\n          [MARKET_DESCRIPTION_PARAM_NAME]: p.formattedDescription,\n          [MARKET_ID_PARAM_NAME]: p.id\n        })\n      }}\n    >\n      <span className=\"my-positions-market-description\">{p.description}</span>\n    </Link>\n  </article>\n);\n\nPositionsMarketOverview.propTypes = {\n  description: PropTypes.string.isRequired\n};\n\nexport default PositionsMarketOverview;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-position-overview.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport MarketTradeCloseDialog from 'modules/market/components/market-trade-close-dialog';\n\nimport { SCALAR } from 'modules/markets/constants/market-types';\nimport { POSITION } from 'modules/market/constants/trade-close-type';\n\nimport getValue from 'utils/get-value';\nimport setShareDenomination from 'utils/set-share-denomination';\n\nconst MyPosition = (p) => {\n  const marketID = getValue(p, 'marketID');\n  const outcomeID = getValue(p, 'id');\n\n  const selectedShareDenomination = getValue(p, `scalarShareDenomination.markets.${marketID}`);\n  const quantityOfShares = setShareDenomination(getValue(p, 'position.qtyShares.formatted'), selectedShareDenomination);\n\n  const isClosable = getValue(p, 'position.isClosable');\n  const closePosition = getValue(p, 'position.closePosition');\n\n  const status = getValue(p, `closePositionStatus.${marketID}.${outcomeID}`);\n\n  return (\n    <div className=\"my-position portfolio-detail\">\n      <div className=\"portfolio-group main-group\">\n        {p.type === SCALAR ?\n          <span className=\"main-group-title\">{p.lastPricePercent.rounded}</span> :\n          <span className=\"main-group-title\">{p.name}</span>\n        }\n        <div className=\"portfolio-pair realized-net\">\n          <span className=\"title\">shares</span>\n          <ValueDenomination\n            {...p.qtyShares}\n            denomination=\"\"\n          />\n        </div>\n      </div>\n      <div className=\"portfolio-group\">\n        <div className=\"portfolio-pair purchase-price\">\n          <span className=\"title\">average price of open position</span>\n          <ValueDenomination {...p.purchasePrice} />\n        </div>\n        <div className=\"portfolio-pair last-price\">\n          <span className=\"title\">last trade price</span>\n          <ValueDenomination {...p.lastPrice} />\n        </div>\n      </div>\n      <div className=\"portfolio-group\">\n        <div className=\"portfolio-pair realized-net\">\n          <span className=\"title\">realized P/L</span>\n          <ValueDenomination {...p.realizedNet} />\n        </div>\n        <div className=\"portfolio-pair unrealized-net\">\n          <span className=\"title\">unrealized P/L</span>\n          <ValueDenomination {...p.unrealizedNet} />\n        </div>\n        <div className=\"portfolio-pair total-net\">\n          <span className=\"title\">total P/L</span>\n          <ValueDenomination {...p.totalNet} />\n        </div>\n      </div>\n      <div className=\"close-trades\">\n        <MarketTradeCloseDialog\n          closeType={POSITION}\n          marketID={marketID}\n          outcomeID={outcomeID}\n          quantityOfShares={quantityOfShares}\n          closePosition={closePosition}\n          isClosable={isClosable}\n          status={status}\n        />\n      </div>\n    </div>\n  );\n};\n\nMyPosition.propTypes = {\n  marketID: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  scalarShareDenomination: PropTypes.object.isRequired,\n  position: PropTypes.object.isRequired,\n  closePositionStatus: PropTypes.object.isRequired,\n  lastPricePercent: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  qtyShares: PropTypes.object.isRequired,\n  purchasePrice: PropTypes.object.isRequired,\n  lastPrice: PropTypes.object.isRequired,\n  realizedNet: PropTypes.object.isRequired,\n  unrealizedNet: PropTypes.object.isRequired,\n  totalNet: PropTypes.object.isRequired\n};\n\nexport default MyPosition;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-position.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ComponentNav from 'modules/common/components/component-nav';\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport NullStateMessage from 'modules/common/components/null-state-message';\n\nimport MyPosition from 'modules/my-positions/components/my-position';\nimport MyPositionOverview from 'modules/my-positions/components/my-position-overview';\nimport MyOrders from 'modules/my-orders/container';\n\nimport { POSITIONS_POSITIONS, POSITIONS_ORDERS } from 'modules/my-positions/constants/internal-views';\n\nimport getValue from 'utils/get-value';\n\nexport default class MyPositionsMarket extends Component {\n  static propTypes = {\n    market: PropTypes.object.isRequired,\n    closePositionStatus: PropTypes.object.isRequired,\n    scalarShareDenomination: PropTypes.object.isRequired,\n    orderCancellation: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.navItems = {\n      [POSITIONS_POSITIONS]: {\n        label: 'Positions'\n      },\n      [POSITIONS_ORDERS]: {\n        label: 'Orders'\n      }\n    };\n\n    this.state = {\n      selectedNav: POSITIONS_POSITIONS\n    };\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    const myPositionOutcomes = getValue(p, 'market.myPositionOutcomes');\n    const myPositionsSummary = getValue(p, 'market.myPositionsSummary');\n\n    const userOpenOrdersCount = getValue(p, 'market.userOpenOrdersSummary.openOrdersCount.value');\n    const outcomes = getValue(p, 'market.outcomes');\n\n    return (\n      <article\n        className=\"my-positions-market portfolio-market\"\n      >\n        <MyPositionOverview\n          id={p.market.id}\n          description={p.market.description}\n          formattedDescription={p.market.formattedDescription}\n        />\n        <ComponentNav\n          navItems={this.navItems}\n          selectedNav={s.selectedNav}\n          updateSelectedNav={selectedNav => this.setState({ selectedNav })}\n        />\n        {s.selectedNav === POSITIONS_POSITIONS &&\n          <div>\n            {myPositionOutcomes && myPositionOutcomes.length ?\n              <div>\n                <div className=\"my-position portfolio-detail\">\n                  <div className=\"portfolio-group main-group\" />\n                  <div className=\"portfolio-group\" />\n                  <div className=\"portfolio-group\">\n                    <div className=\"portfolio-pair realized-net\">\n                      <span className=\"title\">total realized P/L</span>\n                      <ValueDenomination {...myPositionsSummary.realizedNet} />\n                    </div>\n                    <div className=\"portfolio-pair unrealized-net\">\n                      <span className=\"title\">total unrealized P/L</span>\n                      <ValueDenomination {...myPositionsSummary.unrealizedNet} />\n                    </div>\n                    <div className=\"portfolio-pair total-net\">\n                      <span className=\"title\">total P/L</span>\n                      <ValueDenomination {...myPositionsSummary.totalNet} />\n                    </div>\n                  </div>\n                  <div className=\"close-trades\" />\n                </div>\n                {(myPositionOutcomes || []).map(outcome =>\n                  <MyPosition\n                    {...outcome}\n                    {...outcome.position}\n                    key={`${p.market.id}-${outcome.id}`}\n                    type={p.market.type}\n                    closePositionStatus={p.closePositionStatus}\n                    scalarShareDenomination={p.scalarShareDenomination}\n                  />\n                )}\n              </div> :\n              <NullStateMessage message=\"No Positions Held\" />\n            }\n          </div>\n        }\n        {s.selectedNav === POSITIONS_ORDERS &&\n          <div>\n            {userOpenOrdersCount ?\n              <MyOrders\n                outcomes={outcomes}\n                marketType={p.market.type}\n                orderCancellation={p.orderCancellation}\n              /> :\n              <NullStateMessage message=\"No Open Orders\" />\n            }\n          </div>\n        }\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-positions-market.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nimport NullStateMessage from 'modules/common/components/null-state-message';\nimport MyPositionsMarket from 'modules/my-positions/components/my-positions-market';\nimport TransactionsLoadingActions from 'modules/transactions/components/transactions-loading-actions';\nimport FilterSort from 'modules/filter-sort/container';\n\nexport default class MyPositions extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    markets: PropTypes.array.isRequired,\n    closePositionStatus: PropTypes.object.isRequired,\n    scalarShareDenomination: PropTypes.object.isRequired,\n    orderCancellation: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.searchKeys = [\n      'description',\n      ['outcomes', 'name'],\n      ['tags', 'name']\n    ];\n\n    this.state = {\n      filteredMarkets: []\n    };\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    return (\n      <article className=\"my-positions\">\n        <Helmet>\n          <title>My Positions</title>\n        </Helmet>\n        <div className=\"view-header\">\n          <div className=\"view-header-group\" />\n          <div className=\"view-header-group\">\n            <TransactionsLoadingActions\n              loadMoreTransactions={p.loadMoreTransactions}\n              loadAllTransactions={p.loadAllTransactions}\n              transactionsLoading={p.transactionsLoading}\n              hasAllTransactionsLoaded={p.hasAllTransactionsLoaded}\n              triggerTransactionsExport={p.triggerTransactionsExport}\n            />\n          </div>\n        </div>\n        <FilterSort\n          locaiton={p.location}\n          history={p.history}\n          items={p.markets}\n          updateFilteredItems={filteredMarkets => this.setState({ filteredMarkets })}\n          searchPlaceholder=\"Search Traded Markets\"\n          searchKeys={this.searchKeys}\n          filterBySearch\n          filterByMarketState\n          sortByMarketParam\n        />\n        {s.filteredMarkets && s.filteredMarkets.length ?\n          s.filteredMarkets.map(marketIndex => (\n            <MyPositionsMarket\n              key={p.markets[marketIndex].id}\n              market={p.markets[marketIndex]}\n              closePositionStatus={p.closePositionStatus}\n              scalarShareDenomination={p.scalarShareDenomination}\n              orderCancellation={p.orderCancellation}\n              location={p.location}\n              history={p.history}\n            />\n          )) :\n          <NullStateMessage\n            message=\"No Positions Held\"\n          />\n        }\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-positions.jsx","export const POSITIONS_POSITIONS = 'POSITIONS_POSITIONS';\nexport const POSITIONS_ORDERS = 'POSITIONS_ORDERS';\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/constants/internal-views.js","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport memoize from 'memoizee';\n\nimport MyPositions from 'modules/my-positions/components/my-positions';\n\nimport getLoginAccountPositions from 'modules/my-positions/selectors/login-account-positions';\nimport getOpenOrders from 'modules/user-open-orders/selectors/open-orders';\nimport getClosePositionStatus from 'modules/my-positions/selectors/close-position-status';\nimport getScalarShareDenomination from 'modules/market/selectors/scalar-share-denomination';\nimport getOrderCancellation from 'modules/bids-asks/selectors/order-cancellation';\nimport { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { triggerTransactionsExport } from 'modules/transactions/actions/trigger-transactions-export';\n\nconst mapStateToProps = (state) => {\n  const positions = getLoginAccountPositions();\n  const openOrders = getOpenOrders();\n\n  return {\n    markets: getPositionsMarkets(positions, openOrders),\n    closePositionStatus: getClosePositionStatus(),\n    scalarShareDenomination: getScalarShareDenomination(),\n    orderCancellation: getOrderCancellation(),\n    transactionsLoading: state.transactionsLoading,\n    hasAllTransactionsLoaded: state.transactionsOldestLoadedBlock === state.loginAccount.registerBlockNumber // FIXME\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadMoreTransactions: () => dispatch(loadAccountHistory()),\n  loadAllTransactions: () => dispatch(loadAccountHistory(true)),\n  triggerTransactionsExport: () => dispatch(triggerTransactionsExport()),\n});\n\nconst getPositionsMarkets = memoize((positions, openOrders) => Array.from(new Set([...positions.markets, ...openOrders])), { max: 1 });\n\nconst MyPositionsContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(MyPositions));\n\nexport default MyPositionsContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTooltip from 'react-tooltip';\n\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport ValueDate from 'modules/common/components/value-date';\nimport EmDash from 'modules/common/components/em-dash';\n\nconst MyReport = p => (\n  <article\n    className=\"my-report portfolio-detail\"\n  >\n    <div className=\"portfolio-group portfolio-main-group\">\n      <div className=\"portfolio-pair\">\n        <span className=\"main-group-title\">outcome: </span>\n        <span className=\"report-main-group-title-outcome\">\n          {p.outcome && p.outcomePercentage && p.outcomePercentage.value &&\n            <span>{p.outcome}  (<ValueDenomination {...p.outcomePercentage} />)</span>\n          }\n          {p.outcome && !p.outcomePercentage &&\n            <span>{p.outcome}</span>\n          }\n          {!p.outcome &&\n            <EmDash />\n          }\n        </span>\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"report-main-group-title\">reported: </span>\n        <span className=\"report-main-group-title-outcome\">\n          {!!p.isSubmitted &&\n            <span className=\"report-revealed\">\n              {p.reported || <EmDash />}\n            </span>\n          }\n          {!p.isSubmitted &&\n            <span>{p.reported || <EmDash />}</span>\n          }\n          {!!p.outcome && p.isReportEqual &&\n            <i\n              className=\"fa fa-check-circle report-equal\"\n              data-tip=\"Your report matches the consensus outcome\"\n            />\n          }\n          {!!p.outcome && !p.isReportEqual &&\n            <i\n              className=\"fa fa-times-circle report-unequal\"\n              data-tip=\"Your report does not match the consensus outcome\"\n            />\n          }\n        </span>\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"report-main-group-title\">cycle: </span>\n        <span className=\"report-main-group-title-outcome\">\n          {p.period ?\n            <span>\n              {p.period}\n            </span> :\n            <EmDash />\n          }\n        </span>\n      </div>\n    </div>\n    <div className=\"portfolio-group\">\n      {/*\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">fees gain/loss</span>\n        <ValueDenomination\n          className=\"colorize\"\n          {...p.feesEarned}\n        />\n      </div>\n      */}\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">rep gain/loss</span>\n        <ValueDenomination\n          className=\"colorize\"\n          {...p.repEarned}\n        />\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">ended</span>\n        <ValueDate {...p.endDate} />\n      </div>\n    </div>\n    <ReactTooltip type=\"light\" effect=\"solid\" place=\"top\" />\n  </article>\n);\n\nMyReport.propTypes = {\n  outcome: PropTypes.string,\n  outcomePercentage: PropTypes.object,\n  reported: PropTypes.string,\n  repEarned: PropTypes.object,\n  period: PropTypes.number,\n  isSubmitted: PropTypes.bool,\n  isReportEqual: PropTypes.bool,\n  branch: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired\n};\n\nexport default MyReport;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/components/my-report.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { Helmet } from 'react-helmet';\n\nimport NullStateMessage from 'modules/common/components/null-state-message';\nimport MyReport from 'modules/my-reports/components/my-report';\nimport TransactionsLoadingActions from 'modules/transactions/components/transactions-loading-actions';\nimport FilterSort from 'modules/filter-sort/container';\n\nimport makePath from 'modules/app/helpers/make-path';\nimport makeQuery from 'modules/app/helpers/make-query';\nimport getValue from 'utils/get-value';\n\nimport { MARKET } from 'modules/app/constants/views';\nimport { MARKET_DESCRIPTION_PARAM_NAME, MARKET_ID_PARAM_NAME } from 'modules/app/constants/param-names';\n\nexport default class MyReports extends Component {\n  static propTypes = {\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    branch: PropTypes.object.isRequired,\n    reports: PropTypes.array.isRequired,\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.searchKeys = [\n      'description',\n      ['outcomes', 'name'],\n      ['tags', 'name']\n    ];\n\n    this.state = {\n      filteredMarkets: []\n    };\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    return (\n      <article className=\"my-reports\">\n        <Helmet>\n          <title>My Reports</title>\n        </Helmet>\n        <div className=\"view-header\">\n          <div className=\"view-header-group\" />\n          <div className=\"view-header-group\">\n            <TransactionsLoadingActions\n              loadMoreTransactions={p.loadMoreTransactions}\n              loadAllTransactions={p.loadAllTransactions}\n              transactionsLoading={p.transactionsLoading}\n              hasAllTransactionsLoaded={p.hasAllTransactionsLoaded}\n              triggerTransactionsExport={p.triggerTransactionsExport}\n            />\n          </div>\n        </div>\n        <FilterSort\n          locaiton={p.location}\n          history={p.history}\n          items={p.reports}\n          updateFilteredItems={filteredMarkets => this.setState({ filteredMarkets })}\n          searchPlaceholder=\"Search Created Markets\"\n          searchKeys={this.searchKeys}\n          filterBySearch\n          filterByMarketState\n          sortByMarketParam\n        />\n        {s.filteredMarkets && s.filteredMarkets.length ?\n          <div>\n            {s.filteredMarkets.map(marketIndex => (\n              <div\n                key={p.reports[marketIndex].marketID}\n                className=\"portfolio-market\"\n              >\n                <div\n                  className=\"portfolio-market-overview\"\n                >\n                  <Link\n                    to={{\n                      pathname: makePath(MARKET),\n                      search: makeQuery({\n                        [MARKET_DESCRIPTION_PARAM_NAME]: getValue(p, `reports[${marketIndex}].formattedDescription`),\n                        [MARKET_ID_PARAM_NAME]: getValue(p, `reports[${marketIndex}].id`)\n                      })\n                    }}\n                  >\n                    <span className=\"description\">\n                      {getValue(p, `reports[${marketIndex}].description`)}\n                    </span>\n                  </Link>\n                  {p.reports[marketIndex].isChallenged &&\n                    <i\n                      className=\"fa fa-gavel outcome-challenged\"\n                      data-tip=\"This outcome is currently being challenged\"\n                    />\n                  }\n                  {!p.reports[marketIndex].isChallenged && p.reports[marketIndex].isChallengeable &&\n                    <i\n                      className=\"fa fa-exclamation-circle outcome-challengeable\"\n                      data-tip=\"This outcome is eligible to be challenged\"\n                    />\n                  }\n                </div>\n                <MyReport\n                  {...p.reports[marketIndex]}\n                  branch={p.branch}\n                />\n              </div>\n            ))}\n          </div> :\n          <NullStateMessage message=\"No Reports Made\" />\n        }\n        <ReactTooltip type=\"light\" effect=\"solid\" place=\"top\" />\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/components/my-reports.jsx","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport MyReports from 'modules/my-reports/components/my-reports';\nimport getMyReports from 'modules/my-reports/selectors/my-reports';\nimport { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { triggerTransactionsExport } from 'modules/transactions/actions/trigger-transactions-export';\n\nconst mapStateToProps = state => ({\n  branch: state.branch,\n  reports: getMyReports(),\n  transactionsLoading: state.transactionsLoading,\n  hasAllTransactionsLoaded: state.transactionsOldestLoadedBlock === state.loginAccount.registerBlockNumber // FIXME\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMoreTransactions: () => dispatch(loadAccountHistory()),\n  loadAllTransactions: () => dispatch(loadAccountHistory(true)),\n  triggerTransactionsExport: () => dispatch(triggerTransactionsExport()),\n});\n\nconst MyReportsContainer = withRouter(connect(mapStateToProps, mapDispatchToProps)(MyReports));\n\nexport default MyReportsContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/container.js","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport MyPositions from 'modules/my-positions/container';\nimport MyMarkets from 'modules/my-markets/container';\nimport MyReports from 'modules/my-reports/container';\n\nimport makePath from 'modules/app/helpers/make-path';\n\nimport { MY_POSITIONS, MY_MARKETS, MY_REPORTS } from 'modules/app/constants/views';\n\nconst PortfolioView = p => (\n  <section id=\"portfolio_view\" >\n    <Route path={makePath(MY_POSITIONS)} component={MyPositions} />\n    <Route path={makePath(MY_MARKETS)} component={MyMarkets} />\n    <Route path={makePath(MY_REPORTS)} component={MyReports} />\n  </section>\n);\n\nexport default PortfolioView;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/portfolio/components/portfolio-view.jsx"],"sourceRoot":""}