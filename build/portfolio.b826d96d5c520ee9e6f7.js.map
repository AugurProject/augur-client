{"version":3,"sources":["webpack:///./src/modules/portfolio/containers/portfolio.js","webpack:///./src/modules/common/components/spinner.jsx?978c**","webpack:///./src/modules/common/components/component-nav.jsx?4180**","webpack:///./src/modules/market/constants/share-denominations.js?4d84*","webpack:///./src/utils/set-share-denomination.js?b999*","webpack:///./src/modules/common/components/value-date.jsx?7776*","webpack:///./src/modules/market/constants/trade-close-type.js?adc2","webpack:///./src/modules/market/components/market-trade-close-dialog.jsx?a4c0","webpack:///./src/modules/market/selectors/scalar-share-denomination.js?ce17*","webpack:///./src/modules/my-reports/components/report-ethics.jsx?0080*","webpack:///./src/modules/transactions/actions/trigger-transactions-export.js?2fcf","webpack:///./src/modules/transactions/components/transactions-loading-actions.jsx?cc71","webpack:///./src/modules/transactions/selectors/transactions.js?d932","webpack:///./src/modules/bids-asks/selectors/order-cancellation.js?9a95","webpack:///./src/modules/market/components/market-open-orders-group.jsx?4036","webpack:///./src/modules/market/components/market-open-orders-row.jsx?9284","webpack:///./src/modules/my-positions/selectors/close-position-status.js?1a6c","webpack:///./src/modules/my-markets/components/my-market.jsx","webpack:///./src/modules/my-markets/components/my-markets.jsx","webpack:///./src/modules/my-markets/container.js","webpack:///./src/modules/my-orders/components/my-orders.jsx","webpack:///./src/modules/my-orders/container.js","webpack:///./src/modules/my-positions/components/my-position-overview.jsx","webpack:///./src/modules/my-positions/components/my-position.jsx","webpack:///./src/modules/my-positions/components/my-positions-market.jsx","webpack:///./src/modules/my-positions/components/my-positions.jsx","webpack:///./src/modules/my-positions/constants/internal-views.js","webpack:///./src/modules/my-positions/container.js","webpack:///./src/modules/my-reports/components/my-report.jsx","webpack:///./src/modules/my-reports/components/my-reports.jsx","webpack:///./src/modules/my-reports/container.js","webpack:///./src/modules/portfolio/components/portfolio-view.jsx"],"names":["mapStateToProps","activeView","state","Portfolio","connect","Spinner","ComponentNav","classNames","p","fullWidth","Object","keys","navItems","map","nav","selected","selectedNav","isMobile","updateSelectedNav","label","propTypes","PropTypes","bool","object","isRequired","string","func","SHARE","MILLI_SHARE","MICRO_SHARE","DENOMINATIONS","value","setShareDenomination","denomination","formatValue","amount","valueArray","split","dotIndex","indexOf","zeroPadAmount","splice","firstPositiveValue","some","i","parseInt","forEach","handlePostfixedUnit","addCommas","join","step","gtTrillion","newValueArray","length","push","ValueDate","className","formatted","POSITION","ORDER","MarketTradeCloseDialog","props","isConfirming","status","renderCloseDialogContent","bind","marketID","orderID","closeType","isClosable","quantityOfShares","closePosition","orderType","cancelOrder","isTradeCommitLocked","parseFloat","setState","event","s","outcomeID","CLOSE_DIALOG_SUCCESS","store","getState","scalarMarketsShareDenomination","denominations","markets","updateSelectedShareDenomination","selectShareDenomination","dispatch","updateScalarMarketShareDenomination","ReportEthics","isUnethical","triggerTransactionsExport","transactionsLoading","transactionsOldestLoadedBlock","loginAccount","loadedAllTransactions","registerBlockNumber","transactions","selectTransactions","transactionsDataString","encodeURIComponent","JSON","stringify","a","document","createElement","setAttribute","click","loadAccountHistory","TransactionsLoadingActions","hasAllTransactionsLoaded","disabled","loadMoreTransactions","loadAllTransactions","hidden","allowExport","number","createSelector","transactionsData","tradeGroups","formattedTransactions","reduce","id","tradeGroupID","filteredTransactions","filter","formatTransaction","formatGroupedTransactions","sort","b","getValue","transaction","marketLink","data","description","selectMarketLink","gas","formatEther","ethTokens","etherWithoutGas","formatEtherTokens","shares","sharesChange","formatShares","rep","repChange","formatRep","totalShares","plus","numShares","message","type","toNumber","outcomeName","timestamp","orderCancellation","MarketOpenOrdersGroup","userOpenOrders","order","name","marketType","lastPricePercent","cancellationStatuses","abortCancelOrderConfirmation","showCancelOrderConfirmation","selectedShareDenomination","MarketOpenOrdersRow","unmatchedShares","isFirst","avgPrice","selectClosePositionStatus","closePositionTradeGroups","statuses","outcomeStatuses","closePositionTransactionIDs","transactionIDs","transactionID","delayClearTradeGroupIDs","numberOfFailedTransactions","numberOfSuccessfulTransactions","setTimeout","isLocked","clearClosePositionOutcome","Market","endDate","fees","openVolume","volume","numberOfTrades","averageTradeSize","MyMarkets","myMarkets","market","array","getMyMarkets","mapDispatchToProps","MyMarketsContainer","MyOrders","outcomes","outcome","index","orders","getUserOpenOrders","Orders","PositionsMarketOverview","href","onClick","MyPosition","rounded","qtyShares","purchasePrice","lastPrice","realizedNet","unrealizedNet","totalNet","scalarShareDenomination","position","closePositionStatus","MyPositionsMarket","POSITIONS_POSITIONS","myPositionOutcomes","myPositionsSummary","userOpenOrdersCount","MyPositions","POSITIONS_ORDERS","positions","getLoginAccountPositions","openOrders","getOpenOrders","getPositionsMarkets","tradeCommitLock","getClosePositionStatus","getScalarShareDenomination","getOrderCancellation","MyPositionsContainer","memoize","Array","from","Set","max","MyReport","outcomePercentage","isCommitted","isRevealed","reported","isReportEqual","period","branch","currentPeriod","repEarned","MyReports","reports","isChallenged","isChallengeable","getMyReports","MyReportsContainer","PortfolioView"],"mappings":"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","file":"portfolio.b826d96d5c520ee9e6f7.js","sourcesContent":["import { connect } from 'react-redux';\nimport portfolioView from 'modules/portfolio/components/portfolio-view';\n\nconst mapStateToProps = state => ({\n  activeView: state.activeView\n});\n\nconst Portfolio = connect(mapStateToProps)(portfolioView);\n\nexport default Portfolio;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/portfolio/containers/portfolio.js","import React from 'react';\n\nconst Spinner = () => (\n  <article className=\"spinner-container\" >\n    <div className=\"spinner\" />\n  </article>\n);\n\nexport default Spinner;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/spinner.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Link from 'modules/link/components/link';\n\nconst ComponentNav = p => (\n  <ul\n    className={classNames('component-nav', { 'full-width-nav': p.fullWidth })}\n  >\n    {Object.keys(p.navItems || {}).map(nav => (\n      <Link\n        key={nav}\n        className={classNames({ selected: p.selectedNav === nav, 'mobile-only': p.navItems[nav].isMobile })}\n        onClick={() => { p.updateSelectedNav(nav); }}\n      >\n        <li className={classNames({ selected: p.selectedNav === nav })} >\n          {p.navItems[nav].label}\n        </li>\n      </Link>\n    ))}\n  </ul>\n);\n\nComponentNav.propTypes = {\n  fullWidth: PropTypes.bool,\n  navItems: PropTypes.object.isRequired,\n  selectedNav: PropTypes.string.isRequired,\n  updateSelectedNav: PropTypes.func.isRequired\n};\n\nexport default ComponentNav;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/component-nav.jsx","export const SHARE = 'share';\nexport const MILLI_SHARE = 'milli-share';\nexport const MICRO_SHARE = 'micro-share';\n\nexport const DENOMINATIONS = [\n  {\n    label: 'Shares',\n    value: SHARE\n  },\n  {\n    label: 'mShares',\n    value: MILLI_SHARE\n  },\n  {\n    label: 'μShares',\n    value: MICRO_SHARE\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/constants/share-denominations.js","import { SHARE, MILLI_SHARE, MICRO_SHARE } from 'modules/market/constants/share-denominations';\nimport addCommas from 'utils/add-commas-to-number';\n\n// This helper method is very specific in scope\n// It takes in the formatted shares in string format and returns a string denominated as specified\n// The mutation of the shares is done this way so no actual re-calculation is done to the underlying\n// values, just string manipulation for presentation\nfunction setShareDenomination(value, denomination) {\n  if (value == null) {\n    return value;\n  }\n\n  switch (denomination) {\n    case (MICRO_SHARE):\n      return formatValue(value, 4);\n    case (MILLI_SHARE):\n      return formatValue(value, 1);\n    default:\n    case (SHARE):\n      return value;\n  }\n}\n\n// The value is assumed to *always* be in 'SHARES' denomination\nfunction formatValue(value, amount) {\n  let valueArray = value.split('');\n\n  // remove dot + determine 0 pad amount\n  const dotIndex = valueArray.indexOf('.');\n  let zeroPadAmount = amount;\n  if (dotIndex !== -1) {\n    valueArray.splice(dotIndex, 1);\n  } else {\n    zeroPadAmount += 2;\n  }\n\n  // Strip leading 0's OR returns original value if no values are positive\n  let firstPositiveValue = -1;\n  valueArray.some((value, i) => {\n    if (parseInt(value, 10)) {\n      firstPositiveValue = i;\n      return true;\n    }\n\n    return false;\n  });\n  if (firstPositiveValue !== -1) {\n    valueArray.splice(0, firstPositiveValue);\n  } else {\n    return value; // Returns original value\n  }\n\n  // Strip Commas (added back in at the end)\n  valueArray.forEach((value, i) => {\n    if (value === ',') {\n      valueArray.splice(i, 1);\n    }\n  });\n\n  // Handle postFixed denominations (part of the format-number method)\n  valueArray = handlePostfixedUnit(valueArray, zeroPadAmount);\n\n  return addCommas(valueArray.join('')); // return joined string w/ comma separating thousands\n}\n\nfunction handlePostfixedUnit(valueArray, zeroPadAmount) {\n  const step = zeroPadAmount < 4;\n  const gtTrillion = '> 1T'.split('');\n  let newValueArray = valueArray;\n\n  switch (valueArray[newValueArray.length - 1]) {\n  // Handle existing > 10000 values\n    case ('K'): {\n      newValueArray[newValueArray.length - 1] = step ? 'M' : 'B';\n      return newValueArray;\n    }\n    case ('M'): {\n      if (step) {\n        newValueArray[newValueArray.length - 1] = 'B';\n      } else {\n        newValueArray = gtTrillion;\n      }\n      return newValueArray;\n    }\n    case ('B'):\n    case ('T'): {\n      newValueArray = gtTrillion;\n      return newValueArray;\n    }\n\n  // Handle values that become greater than 10000\n    default: {\n      // Append 0's\n      for (let i = 0; i < zeroPadAmount; i++) {\n        newValueArray.push('0');\n      }\n\n      // Mirrors logic present in format-number\n      if (newValueArray.length >= 13) {\n        newValueArray = gtTrillion;\n      } else if (newValueArray.length >= 11) {\n        newValueArray.splice(newValueArray.length - 9);\n        newValueArray.push('B');\n      } else if (newValueArray.length >= 8) {\n        newValueArray.splice(newValueArray.length - 6);\n        newValueArray.push('M');\n      } else if (newValueArray.length >= 5) {\n        newValueArray.splice(newValueArray.length - 3);\n        newValueArray.push('K');\n      }\n\n      return newValueArray;\n    }\n  }\n}\n\nexport default setShareDenomination;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/set-share-denomination.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst ValueDate = p => (\n  <span className={classNames('value-date', p.className)}>\n    {p.formatted}\n  </span>\n);\n\nValueDate.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.object,\n  formatted: PropTypes.string\n};\n\nexport default ValueDate;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/common/components/value-date.jsx","export const POSITION = 'POSITION';\nexport const ORDER = 'ORDER';\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/constants/trade-close-type.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport Spinner from 'modules/common/components/spinner';\nimport EmDash from 'modules/common/components/em-dash';\n\nimport { POSITION, ORDER } from 'modules/market/constants/trade-close-type';\nimport {\n  CLOSE_DIALOG_CLOSING,\n  CLOSE_DIALOG_NO_ORDERS,\n  CLOSE_DIALOG_FAILED,\n  CLOSE_DIALOG_PARTIALLY_FAILED,\n  CLOSE_DIALOG_SUCCESS\n} from 'modules/market/constants/close-dialog-status';\n\nexport default class MarketTradeCloseDialog extends Component {\n  static propTypes = {\n    status: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isConfirming: false,\n      status: props.status\n    };\n\n    this.renderCloseDialogContent = this.renderCloseDialogContent.bind(this);\n  }\n\n  renderCloseDialogContent(\n    marketID,\n    orderID,\n    closeType,\n    isClosable,\n    quantityOfShares,\n    isConfirming,\n    closePosition,\n    status,\n    orderType,\n    cancelOrder,\n    isTradeCommitLocked\n  ) {\n    // Position -- No Available Actions\n    if (closeType === POSITION && !status && (!parseFloat(quantityOfShares, 10) || !isClosable)) {\n      return <EmDash />;\n    }\n\n    if (isConfirming) {\n      return (\n        <div className=\"confirming-dialog\">\n          <button\n            className=\"unstyled confirming-no\"\n            onClick={() => {\n              this.setState({ isConfirming: false });\n            }}\n          >\n            No\n          </button>\n          <button\n            className=\"unstyled confirming-yes\"\n            onClick={(event) => {\n              if (closeType === POSITION) {\n                closePosition(marketID, orderID);\n              } else if (closeType === ORDER) {\n                cancelOrder(orderID, marketID, orderType);\n              }\n              this.setState({ isConfirming: false });\n            }}\n          >\n            Yes\n          </button>\n        </div>\n      );\n    }\n\n    switch (status) {\n      case CLOSE_DIALOG_CLOSING:\n        return <Spinner />;\n      case CLOSE_DIALOG_NO_ORDERS:\n        return <span>no orders</span>;\n      case CLOSE_DIALOG_FAILED:\n        return <span>failed</span>;\n      case CLOSE_DIALOG_PARTIALLY_FAILED:\n        return <span>partially failed</span>;\n      case CLOSE_DIALOG_SUCCESS:\n        return <span>success</span>;\n      default:\n        return (\n          <button\n            className=\"unstyled close-order-button\"\n            onClick={() => {\n              if (!isTradeCommitLocked) {\n                this.setState({ isConfirming: true });\n              }\n            }}\n          >\n            <span>∅</span>\n          </button>\n        );\n    }\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    const orderID = p.closeType === POSITION ? p.outcomeID : p.orderID;\n\n    return (\n      <article\n        className={\n          classNames(\n            'close-dialog', {\n              'action-disabled': p.isTradeCommitLocked && p.closeType === POSITION,\n              'action-running': p.status === CLOSE_DIALOG_CLOSING,\n              'action-failed': p.status === CLOSE_DIALOG_NO_ORDERS ||\n                p.status === CLOSE_DIALOG_FAILED ||\n                p.status === CLOSE_DIALOG_PARTIALLY_FAILED,\n              'action-succeeded': p.status === CLOSE_DIALOG_SUCCESS\n            }\n          )\n        }\n      >\n        {\n          this.renderCloseDialogContent(\n            p.marketID,\n            orderID,\n            p.closeType,\n            p.isClosable,\n            p.quantityOfShares,\n            s.isConfirming,\n            p.closePosition,\n            p.status,\n            p.orderType,\n            p.cancelOrder,\n            p.isTradeCommitLocked\n          )\n        }\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/components/market-trade-close-dialog.jsx","import store from 'src/store';\nimport { updateScalarMarketShareDenomination } from 'modules/market/actions/update-scalar-market-share-denomination';\n\nimport { SHARE, MILLI_SHARE, MICRO_SHARE } from 'modules/market/constants/share-denominations';\n\nexport default function () {\n  const { scalarMarketsShareDenomination } = store.getState();\n\n  return {\n    denominations,\n    markets: scalarMarketsShareDenomination,\n    updateSelectedShareDenomination: selectShareDenomination\n  };\n}\n\nconst denominations = [\n  {\n    label: 'Shares',\n    value: SHARE\n  },\n  {\n    label: 'mShares',\n    value: MILLI_SHARE\n  },\n  {\n    label: 'μShares',\n    value: MICRO_SHARE\n  }\n];\n\nfunction selectShareDenomination(marketID, denomination) {\n  store.dispatch(updateScalarMarketShareDenomination(marketID, denomination));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/selectors/scalar-share-denomination.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReportEthics = p => (\n  <span>\n    {!!p.isUnethical &&\n      <i\n        className=\"fa fa-thumbs-down report-unethical\"\n        data-tip=\"Unethical\"\n      />\n    }\n  </span>\n);\n\nReportEthics.propTypes = {\n  isUnethical: PropTypes.bool\n};\n\nexport default ReportEthics;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/components/report-ethics.jsx","import { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { selectTransactions } from 'modules/transactions/selectors/transactions';\n\nexport const triggerTransactionsExport = () => (dispatch, getState) => {\n  const { transactionsLoading, transactionsOldestLoadedBlock, loginAccount } = getState();\n  const loadedAllTransactions = transactionsOldestLoadedBlock === loginAccount.registerBlockNumber;\n\n  if (!transactionsLoading && loadedAllTransactions) {\n    // trigger download\n    const transactions = selectTransactions(getState());\n    const transactionsDataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(transactions));\n    const a = document.createElement('a');\n\n    a.setAttribute('href', transactionsDataString);\n    a.setAttribute('download', 'AugurTransactions.json');\n    a.click();\n  } else {\n    // trigger load all transactions and give it this function as a callback.\n    dispatch(loadAccountHistory(true, triggerTransactionsExport));\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/transactions/actions/trigger-transactions-export.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Spinner from 'modules/common/components/spinner';\n\nconst TransactionsLoadingActions = p => (\n  <article className=\"transactions-loading-actions\">\n    {!p.transactionsLoading && !p.hasAllTransactionsLoaded &&\n      <div className=\"transactions-load-buttons\">\n        <button\n          className={classNames('unstyled', { disabled: !p.registerBlockNumber })}\n          onClick={() => {\n            if (!p.transactionsLoading) p.loadMoreTransactions();\n          }}\n        >\n          <span>Load More</span>\n        </button>\n        <button\n          className={classNames('unstyled', { disabled: !p.registerBlockNumber })}\n          onClick={() => {\n            if (!p.transactionsLoading) p.loadAllTransactions();\n          }}\n        >\n          <span>Load All</span>\n        </button>\n        <button\n          className={classNames('unstyled', { disabled: !p.registerBlockNumber }, { hidden: !p.allowExport })}\n          onClick={() => {\n            if (!p.transactionsLoading) {\n              p.triggerTransactionsExport();\n            }\n          }}\n        >\n          <span>Export All</span>\n        </button>\n      </div>\n    }\n    {p.transactionsLoading &&\n      <div className=\"transactions-loading-spinner\" >\n        <span className=\"transactions-loading-message\">Loading More History</span>\n        <Spinner />\n      </div>\n    }\n    {!p.transactionsLoading && p.hasAllTransactionsLoaded && <div className=\"transactions-loaded\">\n      <span\n        className=\"transactions-all-loaded-message\"\n      >\n        All History Loaded\n      </span>\n      <button\n        className={classNames('unstyled', { disabled: p.transactionsLoading }, { hidden: !p.allowExport })}\n        onClick={() => {\n          p.triggerTransactionsExport();\n        }}\n      >\n        <span>Export All</span>\n      </button>\n    </div>\n    }\n  </article>\n);\n\nTransactionsLoadingActions.propTypes = {\n  loadMoreTransactions: PropTypes.func.isRequired,\n  loadAllTransactions: PropTypes.func.isRequired,\n  triggerTransactionsExport: PropTypes.func.isRequired,\n  transactionsLoading: PropTypes.bool,\n  hasAllTransactionsLoaded: PropTypes.bool,\n  registerBlockNumber: PropTypes.number,\n  allowExport: PropTypes.bool,\n};\n\nexport default TransactionsLoadingActions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/transactions/components/transactions-loading-actions.jsx","import { createSelector } from 'reselect';\nimport BigNumber from 'bignumber.js';\nimport store from 'src/store';\nimport { selectTransactionsDataState } from 'src/select-state';\nimport { selectMarketLink } from 'modules/link/selectors/links';\n\nimport { BUY } from 'modules/transactions/constants/types';\nimport { PENDING, SUCCESS, FAILED, SUBMITTED, INTERRUPTED } from 'modules/transactions/constants/statuses';\n\nimport getValue from 'utils/get-value';\nimport { formatShares, formatEtherTokens, formatEther, formatRep } from 'utils/format-number';\n\nexport default function () {\n  return selectTransactions(store.getState());\n}\n\nexport const selectTransactions = createSelector(\n  selectTransactionsDataState,\n  (transactionsData) => {\n    const tradeGroups = [];\n    const formattedTransactions = Object.keys(transactionsData || {})\n      .reduce((p, id) => {\n        const tradeGroupID = transactionsData[id].tradeGroupID;\n        if (tradeGroupID) {\n          if (tradeGroups.indexOf(tradeGroupID) === -1) {\n            tradeGroups.push(tradeGroupID);\n            const filteredTransactions = Object.keys(transactionsData).filter(id => transactionsData[id].tradeGroupID === tradeGroupID).map(id => transactionsData[id]);\n\n            if (filteredTransactions.length === 1) {\n              p.push(formatTransaction(filteredTransactions[0]));\n            } else {\n              p.push(formatGroupedTransactions(filteredTransactions));\n            }\n          }\n\n          return p;\n        }\n\n        p.push(formatTransaction(transactionsData[id]));\n        return p;\n      }, [])\n      .sort((a, b) => getValue(b, 'timestamp.timestamp') - getValue(a, 'timestamp.timestamp'));\n\n    return formattedTransactions;\n  }\n);\n\nexport function formatTransaction(transaction) {\n  let marketLink = getValue(transaction, 'data.marketLink');\n  if (marketLink == null && transaction.data && (transaction.data.id || transaction.data.marketID) && (transaction.data.description || transaction.description)) {\n    marketLink = selectMarketLink({\n      id: transaction.data.id || transaction.data.marketID,\n      description: transaction.description\n    }, store.dispatch);\n  }\n\n  return {\n    ...transaction,\n    data: {\n      ...transaction.data,\n      marketLink\n    },\n    gas: transaction.gas && formatEther(transaction.gas),\n    ethTokens: transaction.etherWithoutGas && formatEtherTokens(transaction.etherWithoutGas),\n    shares: transaction.sharesChange && formatShares(transaction.sharesChange),\n    rep: transaction.repChange && formatRep(transaction.repChange)\n  };\n}\n\nexport function formatGroupedTransactions(transactions) {\n  const formattedTransactions = transactions.map(transaction => formatTransaction(transaction)).sort((a, b) => getValue(b, 'timestamp.timestamp') - getValue(a, 'timestamp.timestamp'));\n\n  const status = formattedTransactions.reduce((p, transaction) => {\n    if (p === FAILED || transaction.status === FAILED) return FAILED;\n    if (p === INTERRUPTED || transaction.status === INTERRUPTED) return INTERRUPTED;\n    if (p === PENDING || transaction.status === PENDING) return PENDING;\n    if (p === SUBMITTED || transaction.status === SUBMITTED) return SUBMITTED;\n    if (transaction.status === SUCCESS) return SUCCESS;\n\n    return p;\n  }, null);\n\n  const totalShares = formattedTransactions.reduce((p, transaction) => p.plus(new BigNumber(transaction.numShares.value)), new BigNumber(0));\n\n  return {\n    status,\n    message: `${formattedTransactions[0].type === BUY ? 'Buy' : 'Sell'} ${totalShares.toNumber()} shares of ${formattedTransactions[0].data.outcomeName}`,\n    description: formattedTransactions[0].description,\n    timestamp: formattedTransactions[formattedTransactions.length - 1].timestamp,\n    transactions: formattedTransactions\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/transactions/selectors/transactions.js","import store from 'src/store';\nimport { cancelOrder } from 'modules/bids-asks/actions/cancel-order';\n\nexport default () => {\n  const { orderCancellation } = store.getState();\n\n  return {\n    ...orderCancellation,\n    cancelOrder: (orderID, marketID, type) => {\n      store.dispatch(cancelOrder(orderID, marketID, type));\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/bids-asks/selectors/order-cancellation.js","import React from 'react';\n\nimport MarketOpenOrdersRow from 'modules/market/components/market-open-orders-row';\n\nconst MarketOpenOrdersGroup = p => (\n  <article className=\"market-open-orders-group\">\n    {(p.userOpenOrders || []).map((order, i) => (\n      <MarketOpenOrdersRow\n        key={order.id}\n        isFirst={i === 0}\n        {...order}\n        name={p.name}\n        marketType={p.marketType}\n        lastPricePercent={p.lastPricePercent}\n        status={p.orderCancellation[order.id]}\n        cancellationStatuses={p.orderCancellation.cancellationStatuses}\n        cancelOrder={p.orderCancellation.cancelOrder}\n        abortCancelOrderConfirmation={p.orderCancellation.abortCancelOrderConfirmation}\n        showCancelOrderConfirmation={p.orderCancellation.showCancelOrderConfirmation}\n        selectedShareDenomination={p.selectedShareDenomination}\n      />\n    ))}\n  </article>\n);\n\nexport default MarketOpenOrdersGroup;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/components/market-open-orders-group.jsx","import React from 'react';\n\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport MarketTradeCloseDialog from 'modules/market/components/market-trade-close-dialog';\n\nimport { SCALAR } from 'modules/markets/constants/market-types';\nimport { ORDER } from 'modules/market/constants/trade-close-type';\n\nimport getValue from 'utils/get-value';\nimport setShareDenomination from 'utils/set-share-denomination';\n\nconst MarketOpenOrdersRow = (p) => {\n  const unmatchedShares = setShareDenomination(getValue(p, 'unmatchedShares.formatted'), p.selectedShareDenomination);\n\n  return (\n    <article className={`market-open-orders-row not-selectable ${p.isFirst ? 'isFirst' : ''}`} >\n      {p.isFirst ?\n        <span>\n          {p.marketType === SCALAR ?\n            <ValueDenomination formatted={p.lastPricePercent} /> :\n            <span>{p.name}</span>\n          }\n        </span> :\n        <span />\n      }\n      <span>{p.type}</span>\n      <ValueDenomination formatted={unmatchedShares} />\n      <ValueDenomination {...p.avgPrice} />\n      <MarketTradeCloseDialog\n        closeType={ORDER}\n        marketID={p.marketID}\n        orderID={p.id}\n        status={p.status}\n        orderType={p.type}\n        cancelOrder={p.cancelOrder}\n      />\n    </article>\n  );\n};\n\nexport default MarketOpenOrdersRow;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/market/components/market-open-orders-row.jsx","import { createSelector } from 'reselect';\nimport store from 'src/store';\nimport { selectClosePositionTradeGroupsState, selectTransactionsDataState } from 'src/select-state';\nimport { clearClosePositionOutcome } from 'modules/my-positions/actions/clear-close-position-outcome';\n\nimport { CLOSE_DIALOG_CLOSING, CLOSE_DIALOG_NO_ORDERS, CLOSE_DIALOG_FAILED, CLOSE_DIALOG_PARTIALLY_FAILED, CLOSE_DIALOG_SUCCESS } from 'modules/market/constants/close-dialog-status';\nimport { SUCCESS, FAILED } from 'modules/transactions/constants/statuses';\nimport { UPDATE_TRADE_COMMIT_LOCK } from 'modules/trade/actions/update-trade-commitment';\n\nexport default function () {\n  return selectClosePositionStatus(store.getState());\n}\n\nexport const selectClosePositionStatus = createSelector(\n  selectClosePositionTradeGroupsState,\n  selectTransactionsDataState,\n  (closePositionTradeGroups, transactionsData) => {\n    const statuses = Object.keys(closePositionTradeGroups).reduce((p, marketID) => {\n      const outcomeStatuses = Object.keys(closePositionTradeGroups[marketID]).reduce((p, outcomeID) => {\n        const closePositionTransactionIDs = closePositionTradeGroups[marketID][outcomeID].reduce((p, tradeGroupID) => {\n          const transactionIDs = Object.keys(transactionsData).filter(transactionID => transactionsData[transactionID].tradeGroupID === tradeGroupID);\n\n          if (transactionIDs.length !== 0) {\n            return [...p, ...transactionIDs];\n          }\n\n          return p;\n        }, []);\n\n        // closing failed further up in the call chain to close position\n        if (closePositionTradeGroups[marketID][outcomeID][0] === CLOSE_DIALOG_FAILED) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_FAILED };\n        }\n\n        // no orders are available within the outcome's order book\n        if (closePositionTradeGroups[marketID][outcomeID][0] === CLOSE_DIALOG_NO_ORDERS) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_NO_ORDERS };\n        }\n\n        // Short Circuit until transactionsData is updated with the tradeGroupID\n        if (closePositionTransactionIDs.length === 0 && closePositionTradeGroups[marketID][outcomeID]) {\n          return { ...p, [outcomeID]: CLOSE_DIALOG_CLOSING };\n        }\n\n        const numberOfFailedTransactions = closePositionTransactionIDs.filter(transactionID => transactionsData[transactionID].status === FAILED).length;\n\n        // Close Position Completely Failed\n        if (numberOfFailedTransactions === closePositionTransactionIDs.length) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_FAILED };\n        }\n\n        // Close Position Completely Succeeded\n        const numberOfSuccessfulTransactions = closePositionTransactionIDs.filter(transactionID => transactionsData[transactionID].status === SUCCESS).length;\n\n        if (numberOfSuccessfulTransactions === closePositionTransactionIDs.length) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_SUCCESS };\n        }\n\n        // Close Position Partially Failed\n        if (numberOfFailedTransactions && numberOfFailedTransactions !== closePositionTransactionIDs.length && numberOfSuccessfulTransactions === 0) {\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_PARTIALLY_FAILED };\n        } else if (numberOfFailedTransactions && numberOfFailedTransactions + numberOfSuccessfulTransactions === closePositionTransactionIDs.length) {\n          delayClearTradeGroupIDs(marketID, outcomeID);\n\n          return { ...p, [outcomeID]: CLOSE_DIALOG_PARTIALLY_FAILED };\n        }\n\n        // Close Position In-Process without Failures\n        return { ...p, [outcomeID]: CLOSE_DIALOG_CLOSING };\n      }, {});\n\n      if (Object.keys(outcomeStatuses).length !== 0) {\n        return { ...p, [marketID]: outcomeStatuses };\n      }\n\n      return p;\n    }, {});\n\n    return statuses;\n  }\n);\n\n// waits, then clears tradeIDs from closePositionTradeGroups\n// This will ultimately clear the outcome status and allow for the\n// user to try again if an action is available\nfunction delayClearTradeGroupIDs(marketID, outcomeID) {\n  setTimeout(() => {\n    store.dispatch({\n      type: UPDATE_TRADE_COMMIT_LOCK,\n      isLocked: false\n    });\n    store.dispatch(clearClosePositionOutcome(marketID, outcomeID));\n  }, 3000);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/selectors/close-position-status.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport ValueDate from 'modules/common/components/value-date';\n\nconst Market = p => (\n  <article\n    className=\"my-market portfolio-detail\"\n  >\n    <div\n      className=\"portfolio-group portfolio-main-group\"\n    >\n      <span\n        className=\"main-group-title\"\n      >\n        <span>ends: </span>\n        <ValueDate {...p.endDate} />\n      </span>\n    </div>\n    <div className=\"portfolio-group\">\n      <div className=\"portfolio-pair total-value\">\n        <span className=\"title\">fees collected</span>\n        <ValueDenomination\n          className=\"colorize\"\n          {...p.fees}\n        />\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">open volume</span>\n        <ValueDenomination {...p.openVolume} />\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">volume</span>\n        <ValueDenomination {...p.volume} />\n      </div>\n      <div className=\"portfolio-pair total-cost\">\n        <span className=\"title\"># of trades</span>\n        <ValueDenomination {...p.numberOfTrades} />\n      </div>\n      <div className=\"portfolio-pair total-value\">\n        <span className=\"title\">avg trade size</span>\n        <ValueDenomination {...p.averageTradeSize} />\n      </div>\n    </div>\n  </article>\n);\n\nMarket.propTypes = {\n  endDate: PropTypes.object.isRequired,\n  fees: PropTypes.object.isRequired,\n  openVolume: PropTypes.object.isRequired,\n  volume: PropTypes.object.isRequired,\n  numberOfTrades: PropTypes.object.isRequired,\n  averageTradeSize: PropTypes.object.isRequired\n};\n\nexport default Market;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-markets/components/my-market.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NullStateMessage from 'modules/common/components/null-state-message';\nimport MyMarket from 'modules/my-markets/components/my-market';\nimport Link from 'modules/link/components/link';\nimport TransactionsLoadingActions from 'modules/transactions/components/transactions-loading-actions';\n\nconst MyMarkets = p => (\n  <article className=\"my-markets\">\n    <div className=\"view-header\">\n      <div className=\"view-header-group\" />\n      <div className=\"view-header-group\">\n        <TransactionsLoadingActions\n          loadMoreTransactions={p.loadMoreTransactions}\n          loadAllTransactions={p.loadAllTransactions}\n          transactionsLoading={p.transactionsLoading}\n          hasAllTransactionsLoaded={p.hasAllTransactionsLoaded}\n          triggerTransactionsExport={p.triggerTransactionsExport}\n          registerBlockNumber={p.registerBlockNumber}\n        />\n      </div>\n    </div>\n    {p.myMarkets && p.myMarkets.length ?\n      <div>\n        {p.myMarkets.map(market => (\n          <div\n            key={market.id}\n            className=\"portfolio-market\"\n          >\n            <div\n              className=\"my-market-overview portfolio-market-overview\"\n            >\n              <Link\n                {...market.marketLink}\n              >\n                <span>{market.description}</span>\n              </Link>\n            </div>\n            <MyMarket\n              {...market}\n            />\n          </div>\n        ))}\n      </div> :\n      <NullStateMessage message=\"No Markets Created\" />\n    }\n  </article>\n);\n\nMyMarkets.propTypes = {\n  myMarkets: PropTypes.array.isRequired\n};\n\nexport default MyMarkets;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-markets/components/my-markets.jsx","import { connect } from 'react-redux';\n\nimport MyMarkets from 'modules/my-markets/components/my-markets';\nimport getMyMarkets from 'modules/my-markets/selectors/my-markets';\nimport { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { triggerTransactionsExport } from 'modules/transactions/actions/trigger-transactions-export';\n\nconst mapStateToProps = state => ({\n  myMarkets: getMyMarkets(),\n  transactionsLoading: state.transactionsLoading,\n  hasAllTransactionsLoaded: state.transactionsOldestLoadedBlock === state.loginAccount.registerBlockNumber,\n  registerBlockNumber: state.loginAccount.registerBlockNumber\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMoreTransactions: () => dispatch(loadAccountHistory()),\n  loadAllTransactions: () => dispatch(loadAccountHistory(true)),\n  triggerTransactionsExport: () => dispatch(triggerTransactionsExport()),\n});\n\nconst MyMarketsContainer = connect(mapStateToProps, mapDispatchToProps)(MyMarkets);\n\nexport default MyMarketsContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-markets/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarketOpenOrdersGroup from 'modules/market/components/market-open-orders-group';\n\nimport { SCALAR } from 'modules/markets/constants/market-types';\n\nimport getValue from 'utils/get-value';\n\nconst MyOrders = p => (\n  <article className=\"my-orders market-open-orders\">\n    <div className=\"market-open-orders-header\">\n      <span>{!p.marketType === SCALAR ? 'Outcomes' : 'Outcome'}</span>\n      <span>Type</span>\n      <span>Shares</span>\n      <span>Price</span>\n      <span>Action</span>\n    </div>\n    {(p.outcomes || []).map((outcome, index) => {\n      const lastPricePercent = getValue(outcome, 'lastPricePercent.rounded');\n\n      return (\n        <MarketOpenOrdersGroup\n          key={outcome.name}\n          id={outcome.id}\n          name={outcome.name}\n          marketType={p.marketType}\n          lastPricePercent={lastPricePercent}\n          userOpenOrders={outcome.userOpenOrders}\n          orderCancellation={p.orderCancellation}\n          selectedShareDenomination={p.selectedShareDenomination}\n        />\n      );\n    })}\n  </article>\n);\n\nMyOrders.propTypes = {\n  outcomes: PropTypes.array.isRequired,\n  marketType: PropTypes.string.isRequired,\n  orderCancellation: PropTypes.object.isRequired\n};\n\nexport default MyOrders;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-orders/components/my-orders.jsx","import { connect } from 'react-redux';\n\nimport MyOrders from 'modules/my-orders/components/my-orders';\n\nimport getUserOpenOrders from 'modules/user-open-orders/selectors/open-orders';\n\nconst mapStateToProps = state => ({\n  orders: getUserOpenOrders()\n});\n\nconst Orders = connect(mapStateToProps)(MyOrders);\n\nexport default Orders;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-orders/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Link from 'modules/link/components/link';\n\nconst PositionsMarketOverview = p => (\n  <article className=\"my-positions-overview portfolio-market-overview\">\n    <Link\n      href={p.marketLink.href}\n      onClick={p.marketLink.onClick}\n    >\n      <span className=\"my-positions-market-description\">{p.description}</span>\n    </Link>\n  </article>\n);\n\nPositionsMarketOverview.propTypes = {\n  description: PropTypes.string.isRequired,\n  marketLink: PropTypes.object.isRequired\n};\n\nexport default PositionsMarketOverview;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-position-overview.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport MarketTradeCloseDialog from 'modules/market/components/market-trade-close-dialog';\n\nimport { SCALAR } from 'modules/markets/constants/market-types';\nimport { POSITION } from 'modules/market/constants/trade-close-type';\n\nimport getValue from 'utils/get-value';\nimport setShareDenomination from 'utils/set-share-denomination';\n\nconst MyPosition = (p) => {\n  const marketID = getValue(p, 'marketID');\n  const outcomeID = getValue(p, 'id');\n\n  const selectedShareDenomination = getValue(p, `scalarShareDenomination.markets.${marketID}`);\n  const quantityOfShares = setShareDenomination(getValue(p, 'position.qtyShares.formatted'), selectedShareDenomination);\n\n  const isClosable = getValue(p, 'position.isClosable');\n  const closePosition = getValue(p, 'position.closePosition');\n\n  const status = getValue(p, `closePositionStatus.${marketID}.${outcomeID}`);\n\n  return (\n    <div className=\"my-position portfolio-detail\">\n      <div className=\"portfolio-group main-group\">\n        {p.type === SCALAR ?\n          <span className=\"main-group-title\">{p.lastPricePercent.rounded}</span> :\n          <span className=\"main-group-title\">{p.name}</span>\n        }\n        <div className=\"portfolio-pair realized-net\">\n          <span className=\"title\">shares</span>\n          <ValueDenomination\n            {...p.qtyShares}\n            denomination=\"\"\n          />\n        </div>\n      </div>\n      <div className=\"portfolio-group\">\n        <div className=\"portfolio-pair purchase-price\">\n          <span className=\"title\">average price of open position</span>\n          <ValueDenomination {...p.purchasePrice} />\n        </div>\n        <div className=\"portfolio-pair last-price\">\n          <span className=\"title\">last trade price</span>\n          <ValueDenomination {...p.lastPrice} />\n        </div>\n      </div>\n      <div className=\"portfolio-group\">\n        <div className=\"portfolio-pair realized-net\">\n          <span className=\"title\">realized P/L</span>\n          <ValueDenomination {...p.realizedNet} />\n        </div>\n        <div className=\"portfolio-pair unrealized-net\">\n          <span className=\"title\">unrealized P/L</span>\n          <ValueDenomination {...p.unrealizedNet} />\n        </div>\n        <div className=\"portfolio-pair total-net\">\n          <span className=\"title\">total P/L</span>\n          <ValueDenomination {...p.totalNet} />\n        </div>\n      </div>\n      <div className=\"close-trades\">\n        <MarketTradeCloseDialog\n          closeType={POSITION}\n          marketID={marketID}\n          outcomeID={outcomeID}\n          quantityOfShares={quantityOfShares}\n          closePosition={closePosition}\n          isClosable={isClosable}\n          status={status}\n          isTradeCommitLocked={p.isTradeCommitLocked}\n        />\n      </div>\n    </div>\n  );\n};\n\nMyPosition.propTypes = {\n  marketID: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  scalarShareDenomination: PropTypes.object.isRequired,\n  position: PropTypes.object.isRequired,\n  closePositionStatus: PropTypes.object.isRequired,\n  lastPricePercent: PropTypes.object.isRequired,\n  name: PropTypes.string.isRequired,\n  qtyShares: PropTypes.object.isRequired,\n  purchasePrice: PropTypes.object.isRequired,\n  lastPrice: PropTypes.object.isRequired,\n  realizedNet: PropTypes.object.isRequired,\n  unrealizedNet: PropTypes.object.isRequired,\n  totalNet: PropTypes.object.isRequired\n};\n\nexport default MyPosition;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-position.jsx","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ComponentNav from 'modules/common/components/component-nav';\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport NullStateMessage from 'modules/common/components/null-state-message';\n\nimport MyPosition from 'modules/my-positions/components/my-position';\nimport MyPositionOverview from 'modules/my-positions/components/my-position-overview';\nimport MyOrders from 'modules/my-orders/container';\n\nimport { POSITIONS_POSITIONS, POSITIONS_ORDERS } from 'modules/my-positions/constants/internal-views';\n\nimport getValue from 'utils/get-value';\n\nexport default class MyPositionsMarket extends Component {\n  static propTypes = {\n    market: PropTypes.object.isRequired,\n    isTradeCommitLocked: PropTypes.bool,\n    closePositionStatus: PropTypes.object.isRequired,\n    scalarShareDenomination: PropTypes.object.isRequired,\n    orderCancellation: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.navItems = {\n      [POSITIONS_POSITIONS]: {\n        label: 'Positions'\n      },\n      [POSITIONS_ORDERS]: {\n        label: 'Orders'\n      }\n    };\n\n    this.state = {\n      selectedNav: POSITIONS_POSITIONS\n    };\n  }\n\n  render() {\n    const p = this.props;\n    const s = this.state;\n\n    const myPositionOutcomes = getValue(p, 'market.myPositionOutcomes');\n    const myPositionsSummary = getValue(p, 'market.myPositionsSummary');\n    const marketLink = getValue(p, 'market.marketLink');\n\n    const userOpenOrdersCount = getValue(p, 'market.userOpenOrdersSummary.openOrdersCount.value');\n    const outcomes = getValue(p, 'market.outcomes');\n\n    return (\n      <article\n        className=\"my-positions-market portfolio-market\"\n      >\n        <MyPositionOverview\n          description={p.market.description}\n          marketLink={marketLink}\n        />\n        <ComponentNav\n          navItems={this.navItems}\n          selectedNav={s.selectedNav}\n          updateSelectedNav={selectedNav => this.setState({ selectedNav })}\n        />\n        {s.selectedNav === POSITIONS_POSITIONS &&\n          <div>\n            {myPositionOutcomes && myPositionOutcomes.length ?\n              <div>\n                <div className=\"my-position portfolio-detail\">\n                  <div className=\"portfolio-group main-group\" />\n                  <div className=\"portfolio-group\" />\n                  <div className=\"portfolio-group\">\n                    <div className=\"portfolio-pair realized-net\">\n                      <span className=\"title\">total realized P/L</span>\n                      <ValueDenomination {...myPositionsSummary.realizedNet} />\n                    </div>\n                    <div className=\"portfolio-pair unrealized-net\">\n                      <span className=\"title\">total unrealized P/L</span>\n                      <ValueDenomination {...myPositionsSummary.unrealizedNet} />\n                    </div>\n                    <div className=\"portfolio-pair total-net\">\n                      <span className=\"title\">total P/L</span>\n                      <ValueDenomination {...myPositionsSummary.totalNet} />\n                    </div>\n                  </div>\n                  <div className=\"close-trades\" />\n                </div>\n                {(myPositionOutcomes || []).map(outcome =>\n                  <MyPosition\n                    {...outcome}\n                    {...outcome.position}\n                    key={`${p.market.id}-${outcome.id}`}\n                    type={p.market.type}\n                    closePositionStatus={p.closePositionStatus}\n                    isTradeCommitLocked={p.isTradeCommitLocked}\n                    scalarShareDenomination={p.scalarShareDenomination}\n                  />\n                )}\n              </div> :\n              <NullStateMessage message=\"No Positions Held\" />\n            }\n          </div>\n        }\n        {s.selectedNav === POSITIONS_ORDERS &&\n          <div>\n            {userOpenOrdersCount ?\n              <MyOrders\n                outcomes={outcomes}\n                marketType={p.market.type}\n                orderCancellation={p.orderCancellation}\n              /> :\n              <NullStateMessage message=\"No Open Orders\" />\n            }\n          </div>\n        }\n      </article>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-positions-market.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NullStateMessage from 'modules/common/components/null-state-message';\nimport MyPositionsMarket from 'modules/my-positions/components/my-positions-market';\nimport TransactionsLoadingActions from 'modules/transactions/components/transactions-loading-actions';\n\nconst MyPositions = p => (\n  <article className=\"my-positions\">\n    <div className=\"view-header\">\n      <div className=\"view-header-group\" />\n      <div className=\"view-header-group\">\n        <TransactionsLoadingActions\n          loadMoreTransactions={p.loadMoreTransactions}\n          loadAllTransactions={p.loadAllTransactions}\n          transactionsLoading={p.transactionsLoading}\n          hasAllTransactionsLoaded={p.hasAllTransactionsLoaded}\n          triggerTransactionsExport={p.triggerTransactionsExport}\n          registerBlockNumber={p.registerBlockNumber}\n        />\n      </div>\n    </div>\n    {p.markets && p.markets.length ?\n      p.markets.map(market => (\n        <MyPositionsMarket\n          key={market.id}\n          market={market}\n          closePositionStatus={p.closePositionStatus}\n          isTradeCommitLocked={p.isTradeCommitLocked}\n          scalarShareDenomination={p.scalarShareDenomination}\n          orderCancellation={p.orderCancellation}\n        />\n      )) :\n      <NullStateMessage\n        message=\"No Positions Held\"\n      />\n    }\n  </article>\n);\n\nMyPositions.propTypes = {\n  markets: PropTypes.array.isRequired,\n  isTradeCommitLocked: PropTypes.bool,\n  closePositionStatus: PropTypes.object.isRequired,\n  scalarShareDenomination: PropTypes.object.isRequired,\n  orderCancellation: PropTypes.object.isRequired,\n  registerBlockNumber: PropTypes.number\n};\n\nexport default MyPositions;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/components/my-positions.jsx","export const POSITIONS_POSITIONS = 'POSITIONS_POSITIONS';\nexport const POSITIONS_ORDERS = 'POSITIONS_ORDERS';\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/constants/internal-views.js","import { connect } from 'react-redux';\nimport memoize from 'memoizee';\n\nimport MyPositions from 'modules/my-positions/components/my-positions';\n\nimport getLoginAccountPositions from 'modules/my-positions/selectors/login-account-positions';\nimport getOpenOrders from 'modules/user-open-orders/selectors/open-orders';\nimport getClosePositionStatus from 'modules/my-positions/selectors/close-position-status';\nimport getScalarShareDenomination from 'modules/market/selectors/scalar-share-denomination';\nimport getOrderCancellation from 'modules/bids-asks/selectors/order-cancellation';\nimport { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { triggerTransactionsExport } from 'modules/transactions/actions/trigger-transactions-export';\n\nconst mapStateToProps = (state) => {\n  const positions = getLoginAccountPositions();\n  const openOrders = getOpenOrders();\n\n  return {\n    markets: getPositionsMarkets(positions, openOrders),\n    isTradeCommitLocked: state.tradeCommitLock.isLocked,\n    closePositionStatus: getClosePositionStatus(),\n    scalarShareDenomination: getScalarShareDenomination(),\n    orderCancellation: getOrderCancellation(),\n    transactionsLoading: state.transactionsLoading,\n    hasAllTransactionsLoaded: state.transactionsOldestLoadedBlock === state.loginAccount.registerBlockNumber,\n    registerBlockNumber: state.loginAccount.registerBlockNumber\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadMoreTransactions: () => dispatch(loadAccountHistory()),\n  loadAllTransactions: () => dispatch(loadAccountHistory(true)),\n  triggerTransactionsExport: () => dispatch(triggerTransactionsExport()),\n});\n\nconst MyPositionsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPositions);\n\nconst getPositionsMarkets = memoize((positions, openOrders) => Array.from(new Set([...positions.markets, ...openOrders])), { max: 1 });\n\nexport default MyPositionsContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-positions/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTooltip from 'react-tooltip';\n\nimport ValueDenomination from 'modules/common/components/value-denomination';\nimport ValueDate from 'modules/common/components/value-date';\nimport EmDash from 'modules/common/components/em-dash';\nimport ReportEthics from 'modules/my-reports/components/report-ethics';\n\nconst MyReport = p => (\n  <article\n    className=\"my-report portfolio-detail\"\n  >\n    <div className=\"portfolio-group portfolio-main-group\">\n      <div className=\"portfolio-pair\">\n        <span className=\"main-group-title\">outcome: </span>\n        <span className=\"report-main-group-title-outcome\">\n          {p.outcome && p.outcomePercentage && p.outcomePercentage.value &&\n            <span>{p.outcome}  (<ValueDenomination {...p.outcomePercentage} />)</span>\n          }\n          {p.outcome && !p.outcomePercentage &&\n            <span>{p.outcome}</span>\n          }\n          {!p.outcome &&\n            <EmDash />\n          }\n        </span>\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"report-main-group-title\">reported: </span>\n        <span className=\"report-main-group-title-outcome\">\n          {!!p.isCommitted && !p.isRevealed &&\n            <span\n              className=\"report-committed\"\n              data-tip=\"You have successfully committed to this report. Remember to login to reveal the report!\"\n            >\n              {p.reported || <EmDash />}\n            </span>\n          }\n          {!!p.isRevealed &&\n            <span className=\"report-revealed\">\n              {p.reported || <EmDash />}\n            </span>\n          }\n          {!p.isRevealed && !p.isCommitted &&\n            <span>{p.reported || <EmDash />}</span>\n          }\n          {!!p.outcome && p.isReportEqual &&\n            <i\n              className=\"fa fa-check-circle report-equal\"\n              data-tip=\"Your report matches the consensus outcome\"\n            />\n          }\n          {!!p.outcome && !p.isReportEqual &&\n            <i\n              className=\"fa fa-times-circle report-unequal\"\n              data-tip=\"Your report does not match the consensus outcome\"\n            />\n          }\n          <ReportEthics isUnethical={p.isUnethical} />\n        </span>\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"report-main-group-title\">cycle: </span>\n        <span className=\"report-main-group-title-outcome\">\n          {p.period ?\n            <span\n              data-tip={`${p.branch.currentPeriod - p.period} reporting cycles ago`}\n            >\n              {p.period}\n            </span> :\n            <EmDash />\n          }\n        </span>\n      </div>\n    </div>\n    <div className=\"portfolio-group\">\n      {/*\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">fees gain/loss</span>\n        <ValueDenomination\n          className=\"colorize\"\n          {...p.feesEarned}\n        />\n      </div>\n      */}\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">rep gain/loss</span>\n        <ValueDenomination\n          className=\"colorize\"\n          {...p.repEarned}\n        />\n      </div>\n      <div className=\"portfolio-pair\">\n        <span className=\"title\">ended</span>\n        <ValueDate {...p.endDate} />\n      </div>\n    </div>\n    <ReactTooltip type=\"light\" effect=\"solid\" place=\"top\" />\n  </article>\n);\n\nMyReport.propTypes = {\n  outcome: PropTypes.string,\n  outcomePercentage: PropTypes.object,\n  reported: PropTypes.string,\n  repEarned: PropTypes.object,\n  period: PropTypes.number,\n  isCommitted: PropTypes.bool,\n  isRevealed: PropTypes.bool,\n  isReportEqual: PropTypes.bool,\n  isUnethical: PropTypes.bool,\n  branch: PropTypes.object.isRequired,\n  endDate: PropTypes.object.isRequired\n};\n\nexport default MyReport;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/components/my-report.jsx","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTooltip from 'react-tooltip';\n\nimport NullStateMessage from 'modules/common/components/null-state-message';\nimport MyReport from 'modules/my-reports/components/my-report';\nimport Link from 'modules/link/components/link';\nimport TransactionsLoadingActions from 'modules/transactions/components/transactions-loading-actions';\n\nconst MyReports = p => (\n  <article className=\"my-reports\">\n    <div className=\"view-header\">\n      <div className=\"view-header-group\" />\n      <div className=\"view-header-group\">\n        <TransactionsLoadingActions\n          loadMoreTransactions={p.loadMoreTransactions}\n          loadAllTransactions={p.loadAllTransactions}\n          transactionsLoading={p.transactionsLoading}\n          hasAllTransactionsLoaded={p.hasAllTransactionsLoaded}\n          triggerTransactionsExport={p.triggerTransactionsExport}\n          registerBlockNumber={p.registerBlockNumber}\n        />\n      </div>\n    </div>\n    {p.reports && p.reports.length ?\n      <div>\n        {p.reports.map(market => (\n          <div\n            key={market.marketID}\n            className=\"portfolio-market\"\n          >\n            <div\n              className=\"portfolio-market-overview\"\n            >\n              <Link\n                {...market.marketLink}\n              >\n                <span className=\"description\">\n                  {market.description}\n                </span>\n              </Link>\n              {market.isChallenged &&\n                <i\n                  className=\"fa fa-gavel outcome-challenged\"\n                  data-tip=\"This outcome is currently being challenged\"\n                />\n              }\n              {!market.isChallenged && market.isChallengeable &&\n                <i\n                  className=\"fa fa-exclamation-circle outcome-challengeable\"\n                  data-tip=\"This outcome is eligible to be challenged\"\n                />\n              }\n            </div>\n            <MyReport\n              {...market}\n              branch={p.branch}\n            />\n          </div>\n        ))}\n      </div> :\n      <NullStateMessage message=\"No Reports Made\" />\n    }\n    <ReactTooltip type=\"light\" effect=\"solid\" place=\"top\" />\n  </article>\n);\n\nMyReports.propTypes = {\n  branch: PropTypes.object.isRequired,\n  reports: PropTypes.array.isRequired,\n  registerBlockNumber: PropTypes.number,\n};\n\nexport default MyReports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/components/my-reports.jsx","import { connect } from 'react-redux';\n\nimport MyReports from 'modules/my-reports/components/my-reports';\nimport getMyReports from 'modules/my-reports/selectors/my-reports';\nimport { loadAccountHistory } from 'modules/auth/actions/load-account-history';\nimport { triggerTransactionsExport } from 'modules/transactions/actions/trigger-transactions-export';\n\nconst mapStateToProps = state => ({\n  branch: state.branch,\n  reports: getMyReports(),\n  transactionsLoading: state.transactionsLoading,\n  hasAllTransactionsLoaded: state.transactionsOldestLoadedBlock === state.loginAccount.registerBlockNumber,\n  registerBlockNumber: state.loginAccount.registerBlockNumber\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadMoreTransactions: () => dispatch(loadAccountHistory()),\n  loadAllTransactions: () => dispatch(loadAccountHistory(true)),\n  triggerTransactionsExport: () => dispatch(triggerTransactionsExport()),\n});\n\nconst MyReportsContainer = connect(mapStateToProps, mapDispatchToProps)(MyReports);\n\nexport default MyReportsContainer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/my-reports/container.js","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MyPositions from 'modules/my-positions/container';\nimport MyMarkets from 'modules/my-markets/container';\nimport MyReports from 'modules/my-reports/container';\n\nimport { MY_POSITIONS, MY_MARKETS, MY_REPORTS } from 'modules/app/constants/views';\n\nconst PortfolioView = p => (\n  <section id=\"portfolio_view\" >\n    {p.activeView === MY_POSITIONS &&\n      <MyPositions />\n    }\n    {p.activeView === MY_MARKETS &&\n      <MyMarkets />\n    }\n    {p.activeView === MY_REPORTS &&\n      <MyReports />\n    }\n  </section>\n);\n\nPortfolioView.propTypes = {\n  activeView: PropTypes.string.isRequired\n};\n\nexport default PortfolioView;\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/portfolio/components/portfolio-view.jsx"],"sourceRoot":""}