@import (reference) "~assets/styles/shared";

.ValueLabel {
  color: inherit;
  cursor: pointer;
  z-index: 2;

  > label {
    color: inherit;
    cursor: pointer;
    margin: 0;
  }
}

.HoverValueLabel {
  color: inherit;
  cursor: pointer;
  display: flex;
  flex: 1;

  > span {
    display: grid;
    flex: 1;
    grid-template-columns: minmax(0.625rem, 2.8125rem) 1fr;

    > span:first-of-type {
      display: flex;
      justify-content: flex-end;
    }

    > span:last-of-type {
      display: flex;
      justify-content: flex-start;
    }
  }
}

.PropertyLabel {
  display: flex;
  flex-flow: column nowrap;

  > span:first-of-type {
    .text-12;

    align-items: center;
    color: @color-neutral;
    display: flex;
    flex-flow: row nowrap;
    line-height: @size-16;

    > label {
      display: inline-block;
      margin: 0 0 0 0.25rem;
      width: @size-12;

      > svg {
        fill: none;
        height: @size-18;
        width: @size-18;

        > circle {
          fill: @color-tertiary-one;
          stroke: @color-primary-alternate;
          stroke-width: 2;
        }

        > path {
          fill: @color-secondary-text;
        }
      }
    }
  }

  > span:last-of-type {
    .mono-14-bold;

    color: @color-secondary-text;
    line-height: @size-16;
  }
}

.LinearPropertyLabel {
  align-items: center;
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  white-space: nowrap;

  &:not(:last-of-type) {
    margin-bottom: 0.375rem;
  }

  > span:first-of-type {
    .text-10;

    align-items: center;
    color: @color-less-neutral;
    flex-flow: row nowrap;
    line-height: @size-16;

    > label {
      margin: 0 0 0 0.25rem;
      width: @size-10;
    }
  }

  > svg {
    display: flex;
    flex-grow: 1;
    margin: 0.5rem 0 0 0.5rem;

    > line {
      stroke: fade(@color-white, 40%);
    }
  }

  > span:last-of-type {
    .mono-11;

    color: @color-secondary-text;
    line-height: @size-16;
    padding-left: 0.5rem;

    &.isAccented {
      color: @color-error-text;
    }
  }

  &.Large {
    > span:first-of-type {
      .mono-10;

      color: @color-shadow-text;
    }

    > span:last-of-type {
      .mono-14-bold;

      color: @color-secondary-text;
    }
  }

  &.Highlight {
    > span:first-of-type {
      .mono-10;

      color: @color-secondary-text;
    }

    > span:last-of-type,
    > span:last-of-type > label {
      .mono-12-bold;

      color: @color-secondary-text;
    }
  }
}

.LinearPropertyLabelPercent {
  .LinearPropertyLabel;

  align-items: flex-start;
  margin-bottom: 0;

  > div:first-of-type {
    margin-right: 0.25rem;
  }
}

div.LinearPropertyViewTransaction {
  > div {
    margin-bottom: 0;
  }
}

.MarketTypeLabel {
  .mono-10;

  background: @color-primary-light;
  border-radius: @border-radius-rounded;
  color: @color-secondary-text;
  height: @size-24;
  padding: 0.3125rem 0.5rem;
  text-transform: capitalize;
}

.MarketStatus {
  .text-12-bold;

  color: @color-secondary-text;
  line-height: @size-14;
  padding-bottom: 0.375rem;
  position: relative;

  &::after {
    border-radius: 0.125rem;
    bottom: 0;
    content: "";
    height: 0.125rem;
    left: 0;
    position: absolute;
    right: 0;
  }
}

.MarketStatus_mini {
  .mono-9;

  line-height: @size-12;
  padding-bottom: 0.125rem; // 2px
  position: relative;

  &::after {
    border-radius: 0.125rem;
    bottom: 0;
    content: "";
    height: 1px;
    left: 0;
    position: absolute;
    right: 0;
  }
}

.MarketStatus_alternate {
  font-family: @roboto-mono;
  max-width: fit-content;
}

.MarketStatus_open {
  &::after {
    background: @color-open;
  }
}

.MarketStatus_reporting {
  &::after {
    background: @color-in-reporting;
  }
}

.MarketStatus_resolved {
  &::after {
    background: @color-resolved;
  }
}

.PendingLabel {
  .mono-10;

  align-items: center;
  background: @color-primary-light;
  border-radius: @border-radius-rounded;
  color: @color-secondary-text;
  display: flex;
  flex-flow: row nowrap;
  height: @size-16;
  line-height: @size-10;
  padding: 1px 0.375rem;

  > div {
    border-width: 1px;
    margin-left: 0.3125rem;
  }
}

.MovementLabel {
  align-items: center;
  color: @color-less-neutral;
  display: flex;
  justify-content: flex-end;
}

.MovementLabel_Text {
  &_small {
    .mono-9;
  }

  &_normal {
    .mono-11;
  }

  &_large {
    .mono-12;
  }

  &_positive {
    color: @color-positive;
  }

  &_negative {
    color: @color-negative;
  }
}

.MovementLabel_Icon {
  margin: 0 0.5rem 0 0;

  > svg {
    fill: none;
    height: @size-9;
    width: @size-14;
  }

  &_small {
    transform: scale(0.8);
  }

  &_normal {
    transform: scale(0.9);
  }

  &_large {
    transform: scale(1);
  }

  &_positive {
    > svg > path:nth-child(1) {
      fill: @color-positive;
    }

    > svg > path:nth-child(2) {
      stroke: @color-positive;
    }
  }

  &_negative {
    > svg {
      transform: rotateX(180deg);
    }

    > svg > path:nth-child(1) {
      fill: @color-negative;
    }

    > svg > path:nth-child(2) {
      stroke: @color-negative;
    }
  }
}

.PillLabel {
  .mono-10;

  align-items: center;
  background: @color-highlight;
  border-radius: 6px;
  display: flex;
  justify-content: center;
  padding: 0 0.375rem;
}

.PositionTypeLabel__type {
  color: @color-positive;
  font-weight: bold;
  text-transform: capitalize;
}

.PositionTypeLabel__typeSell {
  color: @color-negative2;
}

.PositionTypeLabel__typeClosed {
  color: unset;
}
